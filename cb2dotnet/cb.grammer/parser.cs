/* This file was generated by SableCC (http://www.sablecc.org/). */

using System;
using System.Collections;
using System.Text;
using System.IO;
using net.sf.cb2xml.sablecc.node;
using net.sf.cb2xml.sablecc.lexer;
using net.sf.cb2xml.sablecc.analysis;

namespace net.sf.cb2xml.sablecc.parser {

public class ParserException : ApplicationException
{
    Token token;

    public ParserException(Token token, String  message) : base(message)
    {
        this.token = token;
    }

    public Token Token
    {
      get { return token; }
    }
}

internal class State
{
    internal int state;
    internal ArrayList nodes;

    internal State(int state, ArrayList nodes)
    {
        this.state = state;
        this.nodes = nodes;
    }
}

internal class TokenIndex : AnalysisAdapter
{
    internal int index;

    public override void CaseTDot(TDot node)
    {
        index = 0;
    }

    public override void CaseTComma(TComma node)
    {
        index = 1;
    }

    public override void CaseTSlash(TSlash node)
    {
        index = 2;
    }

    public override void CaseTPlus(TPlus node)
    {
        index = 3;
    }

    public override void CaseTMinus(TMinus node)
    {
        index = 4;
    }

    public override void CaseTStar(TStar node)
    {
        index = 5;
    }

    public override void CaseTDollar(TDollar node)
    {
        index = 6;
    }

    public override void CaseTLparen(TLparen node)
    {
        index = 7;
    }

    public override void CaseTRparen(TRparen node)
    {
        index = 8;
    }

    public override void CaseTNumber88(TNumber88 node)
    {
        index = 9;
    }

    public override void CaseTNumberNot88(TNumberNot88 node)
    {
        index = 10;
    }

    public override void CaseTAlphanumericLiteral(TAlphanumericLiteral node)
    {
        index = 11;
    }

    public override void CaseTNumericLiteral(TNumericLiteral node)
    {
        index = 12;
    }

    public override void CaseTDotZee(TDotZee node)
    {
        index = 13;
    }

    public override void CaseTAll(TAll node)
    {
        index = 14;
    }

    public override void CaseTAre(TAre node)
    {
        index = 15;
    }

    public override void CaseTAscending(TAscending node)
    {
        index = 16;
    }

    public override void CaseTBinary(TBinary node)
    {
        index = 17;
    }

    public override void CaseTBlank(TBlank node)
    {
        index = 18;
    }

    public override void CaseTBy(TBy node)
    {
        index = 19;
    }

    public override void CaseTCharacter(TCharacter node)
    {
        index = 20;
    }

    public override void CaseTComp(TComp node)
    {
        index = 21;
    }

    public override void CaseTComp1(TComp1 node)
    {
        index = 22;
    }

    public override void CaseTComp2(TComp2 node)
    {
        index = 23;
    }

    public override void CaseTComp3(TComp3 node)
    {
        index = 24;
    }

    public override void CaseTComp4(TComp4 node)
    {
        index = 25;
    }

    public override void CaseTComp5(TComp5 node)
    {
        index = 26;
    }

    public override void CaseTDate(TDate node)
    {
        index = 27;
    }

    public override void CaseTDepending(TDepending node)
    {
        index = 28;
    }

    public override void CaseTDescending(TDescending node)
    {
        index = 29;
    }

    public override void CaseTDisplay(TDisplay node)
    {
        index = 30;
    }

    public override void CaseTDisplay1(TDisplay1 node)
    {
        index = 31;
    }

    public override void CaseTExternal(TExternal node)
    {
        index = 32;
    }

    public override void CaseTFiller(TFiller node)
    {
        index = 33;
    }

    public override void CaseTFormat(TFormat node)
    {
        index = 34;
    }

    public override void CaseTFunctionPointer(TFunctionPointer node)
    {
        index = 35;
    }

    public override void CaseTGlobal(TGlobal node)
    {
        index = 36;
    }

    public override void CaseTHighValues(THighValues node)
    {
        index = 37;
    }

    public override void CaseTIndex(TIndex node)
    {
        index = 38;
    }

    public override void CaseTIndexed(TIndexed node)
    {
        index = 39;
    }

    public override void CaseTIs(TIs node)
    {
        index = 40;
    }

    public override void CaseTJustified(TJustified node)
    {
        index = 41;
    }

    public override void CaseTKey(TKey node)
    {
        index = 42;
    }

    public override void CaseTLeading(TLeading node)
    {
        index = 43;
    }

    public override void CaseTLeft(TLeft node)
    {
        index = 44;
    }

    public override void CaseTLowValues(TLowValues node)
    {
        index = 45;
    }

    public override void CaseTNational(TNational node)
    {
        index = 46;
    }

    public override void CaseTNative(TNative node)
    {
        index = 47;
    }

    public override void CaseTNulls(TNulls node)
    {
        index = 48;
    }

    public override void CaseTObject(TObject node)
    {
        index = 49;
    }

    public override void CaseTOccurs(TOccurs node)
    {
        index = 50;
    }

    public override void CaseTOn(TOn node)
    {
        index = 51;
    }

    public override void CaseTPackedDecimal(TPackedDecimal node)
    {
        index = 52;
    }

    public override void CaseTPicture(TPicture node)
    {
        index = 53;
    }

    public override void CaseTPointer(TPointer node)
    {
        index = 54;
    }

    public override void CaseTProcedurePointer(TProcedurePointer node)
    {
        index = 55;
    }

    public override void CaseTQuotes(TQuotes node)
    {
        index = 56;
    }

    public override void CaseTRedefines(TRedefines node)
    {
        index = 57;
    }

    public override void CaseTReference(TReference node)
    {
        index = 58;
    }

    public override void CaseTRenames(TRenames node)
    {
        index = 59;
    }

    public override void CaseTRight(TRight node)
    {
        index = 60;
    }

    public override void CaseTSeparate(TSeparate node)
    {
        index = 61;
    }

    public override void CaseTSign(TSign node)
    {
        index = 62;
    }

    public override void CaseTSpaces(TSpaces node)
    {
        index = 63;
    }

    public override void CaseTSynchronized(TSynchronized node)
    {
        index = 64;
    }

    public override void CaseTThrough(TThrough node)
    {
        index = 65;
    }

    public override void CaseTTimes(TTimes node)
    {
        index = 66;
    }

    public override void CaseTTo(TTo node)
    {
        index = 67;
    }

    public override void CaseTTrailing(TTrailing node)
    {
        index = 68;
    }

    public override void CaseTUsage(TUsage node)
    {
        index = 69;
    }

    public override void CaseTValue(TValue node)
    {
        index = 70;
    }

    public override void CaseTValues(TValues node)
    {
        index = 71;
    }

    public override void CaseTWhen(TWhen node)
    {
        index = 72;
    }

    public override void CaseTZeros(TZeros node)
    {
        index = 73;
    }

    public override void CaseTDataName(TDataName node)
    {
        index = 74;
    }

    public override void CaseEOF(EOF node)
    {
        index = 75;
    }
}

public class Parser
{
    private Analysis ignoredTokens = new AnalysisAdapter();
    public Analysis IgnoredTokens
    {
      get { return ignoredTokens; }
    }

    protected ArrayList nodeList;

    private Lexer lexer;
    private Stack stack = new Stack();
    private int last_shift;
    private int last_pos;
    private int last_line;
    private Token last_token;
    private TokenIndex converter = new TokenIndex();
    private int[] action = new int[2];

    private const int SHIFT = 0;
    private const int REDUCE = 1;
    private const int ACCEPT = 2;
    private const int ERROR = 3;

    public Parser(Lexer lexer)
    {
        this.lexer = lexer;
    }

    private int GoTo(int index)
    {
        int state = State();
        int low = 1;
        int high = gotoTable[index].Length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            int middle = (low + high) / 2;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private void Push(int numstate, ArrayList listNode)
    {
        this.nodeList = listNode;

        stack.Push(new State(numstate, this.nodeList));
    }

    private int State()
    {
        State s = (State) stack.Peek();
        return s.state;
    }

    private ArrayList Pop()
    {
        return (ArrayList) ((State) stack.Pop()).nodes;
    }

    private int Index(Switchable token)
    {
        converter.index = -1;
        token.Apply(converter);
        return converter.index;
    }

    public Start Parse()
    {
        Push(0, null);

        IList ign = null;
        while(true)
        {
            while(Index(lexer.Peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new TypedList(NodeCast.Instance);
                }

                ign.Add(lexer.Next());
            }

            if(ign != null)
            {
                ignoredTokens.SetIn(lexer.Peek(), ign);
                ign = null;
            }

            last_pos = lexer.Peek().Pos;
            last_line = lexer.Peek().Line;
            last_token = lexer.Peek();

            int index = Index(lexer.Peek());
            action[0] = actionTable[State()][0][1];
            action[1] = actionTable[State()][0][2];

            int low = 1;
            int high = actionTable[State()].Length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < actionTable[State()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > actionTable[State()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    action[0] = actionTable[State()][middle][1];
                    action[1] = actionTable[State()][middle][2];
                    break;
                }
            }

            switch(action[0])
            {
                case SHIFT:
        {
            ArrayList list = new ArrayList();
            list.Add(lexer.Next());
                        Push(action[1], list);
                        last_shift = action[1];
                    }
        break;
                case REDUCE:
                    switch(action[1])
                    {
                    case 0:
        {
      ArrayList list = New0();
      Push(GoTo(0), list);
        }
        break;
                    case 1:
        {
      ArrayList list = New1();
      Push(GoTo(1), list);
        }
        break;
                    case 2:
        {
      ArrayList list = New2();
      Push(GoTo(1), list);
        }
        break;
                    case 3:
        {
      ArrayList list = New3();
      Push(GoTo(2), list);
        }
        break;
                    case 4:
        {
      ArrayList list = New4();
      Push(GoTo(2), list);
        }
        break;
                    case 5:
        {
      ArrayList list = New5();
      Push(GoTo(2), list);
        }
        break;
                    case 6:
        {
      ArrayList list = New6();
      Push(GoTo(3), list);
        }
        break;
                    case 7:
        {
      ArrayList list = New7();
      Push(GoTo(3), list);
        }
        break;
                    case 8:
        {
      ArrayList list = New8();
      Push(GoTo(3), list);
        }
        break;
                    case 9:
        {
      ArrayList list = New9();
      Push(GoTo(3), list);
        }
        break;
                    case 10:
        {
      ArrayList list = New10();
      Push(GoTo(3), list);
        }
        break;
                    case 11:
        {
      ArrayList list = New11();
      Push(GoTo(3), list);
        }
        break;
                    case 12:
        {
      ArrayList list = New12();
      Push(GoTo(3), list);
        }
        break;
                    case 13:
        {
      ArrayList list = New13();
      Push(GoTo(3), list);
        }
        break;
                    case 14:
        {
      ArrayList list = New14();
      Push(GoTo(4), list);
        }
        break;
                    case 15:
        {
      ArrayList list = New15();
      Push(GoTo(4), list);
        }
        break;
                    case 16:
        {
      ArrayList list = New16();
      Push(GoTo(5), list);
        }
        break;
                    case 17:
        {
      ArrayList list = New17();
      Push(GoTo(6), list);
        }
        break;
                    case 18:
        {
      ArrayList list = New18();
      Push(GoTo(6), list);
        }
        break;
                    case 19:
        {
      ArrayList list = New19();
      Push(GoTo(7), list);
        }
        break;
                    case 20:
        {
      ArrayList list = New20();
      Push(GoTo(7), list);
        }
        break;
                    case 21:
        {
      ArrayList list = New21();
      Push(GoTo(7), list);
        }
        break;
                    case 22:
        {
      ArrayList list = New22();
      Push(GoTo(7), list);
        }
        break;
                    case 23:
        {
      ArrayList list = New23();
      Push(GoTo(7), list);
        }
        break;
                    case 24:
        {
      ArrayList list = New24();
      Push(GoTo(7), list);
        }
        break;
                    case 25:
        {
      ArrayList list = New25();
      Push(GoTo(7), list);
        }
        break;
                    case 26:
        {
      ArrayList list = New26();
      Push(GoTo(7), list);
        }
        break;
                    case 27:
        {
      ArrayList list = New27();
      Push(GoTo(7), list);
        }
        break;
                    case 28:
        {
      ArrayList list = New28();
      Push(GoTo(7), list);
        }
        break;
                    case 29:
        {
      ArrayList list = New29();
      Push(GoTo(7), list);
        }
        break;
                    case 30:
        {
      ArrayList list = New30();
      Push(GoTo(8), list);
        }
        break;
                    case 31:
        {
      ArrayList list = New31();
      Push(GoTo(8), list);
        }
        break;
                    case 32:
        {
      ArrayList list = New32();
      Push(GoTo(9), list);
        }
        break;
                    case 33:
        {
      ArrayList list = New33();
      Push(GoTo(9), list);
        }
        break;
                    case 34:
        {
      ArrayList list = New34();
      Push(GoTo(10), list);
        }
        break;
                    case 35:
        {
      ArrayList list = New35();
      Push(GoTo(11), list);
        }
        break;
                    case 36:
        {
      ArrayList list = New36();
      Push(GoTo(12), list);
        }
        break;
                    case 37:
        {
      ArrayList list = New37();
      Push(GoTo(12), list);
        }
        break;
                    case 38:
        {
      ArrayList list = New38();
      Push(GoTo(13), list);
        }
        break;
                    case 39:
        {
      ArrayList list = New39();
      Push(GoTo(13), list);
        }
        break;
                    case 40:
        {
      ArrayList list = New40();
      Push(GoTo(13), list);
        }
        break;
                    case 41:
        {
      ArrayList list = New41();
      Push(GoTo(13), list);
        }
        break;
                    case 42:
        {
      ArrayList list = New42();
      Push(GoTo(14), list);
        }
        break;
                    case 43:
        {
      ArrayList list = New43();
      Push(GoTo(14), list);
        }
        break;
                    case 44:
        {
      ArrayList list = New44();
      Push(GoTo(14), list);
        }
        break;
                    case 45:
        {
      ArrayList list = New45();
      Push(GoTo(14), list);
        }
        break;
                    case 46:
        {
      ArrayList list = New46();
      Push(GoTo(14), list);
        }
        break;
                    case 47:
        {
      ArrayList list = New47();
      Push(GoTo(14), list);
        }
        break;
                    case 48:
        {
      ArrayList list = New48();
      Push(GoTo(14), list);
        }
        break;
                    case 49:
        {
      ArrayList list = New49();
      Push(GoTo(14), list);
        }
        break;
                    case 50:
        {
      ArrayList list = New50();
      Push(GoTo(14), list);
        }
        break;
                    case 51:
        {
      ArrayList list = New51();
      Push(GoTo(14), list);
        }
        break;
                    case 52:
        {
      ArrayList list = New52();
      Push(GoTo(15), list);
        }
        break;
                    case 53:
        {
      ArrayList list = New53();
      Push(GoTo(16), list);
        }
        break;
                    case 54:
        {
      ArrayList list = New54();
      Push(GoTo(16), list);
        }
        break;
                    case 55:
        {
      ArrayList list = New55();
      Push(GoTo(16), list);
        }
        break;
                    case 56:
        {
      ArrayList list = New56();
      Push(GoTo(16), list);
        }
        break;
                    case 57:
        {
      ArrayList list = New57();
      Push(GoTo(17), list);
        }
        break;
                    case 58:
        {
      ArrayList list = New58();
      Push(GoTo(17), list);
        }
        break;
                    case 59:
        {
      ArrayList list = New59();
      Push(GoTo(18), list);
        }
        break;
                    case 60:
        {
      ArrayList list = New60();
      Push(GoTo(18), list);
        }
        break;
                    case 61:
        {
      ArrayList list = New61();
      Push(GoTo(19), list);
        }
        break;
                    case 62:
        {
      ArrayList list = New62();
      Push(GoTo(19), list);
        }
        break;
                    case 63:
        {
      ArrayList list = New63();
      Push(GoTo(20), list);
        }
        break;
                    case 64:
        {
      ArrayList list = New64();
      Push(GoTo(20), list);
        }
        break;
                    case 65:
        {
      ArrayList list = New65();
      Push(GoTo(20), list);
        }
        break;
                    case 66:
        {
      ArrayList list = New66();
      Push(GoTo(20), list);
        }
        break;
                    case 67:
        {
      ArrayList list = New67();
      Push(GoTo(21), list);
        }
        break;
                    case 68:
        {
      ArrayList list = New68();
      Push(GoTo(21), list);
        }
        break;
                    case 69:
        {
      ArrayList list = New69();
      Push(GoTo(22), list);
        }
        break;
                    case 70:
        {
      ArrayList list = New70();
      Push(GoTo(22), list);
        }
        break;
                    case 71:
        {
      ArrayList list = New71();
      Push(GoTo(23), list);
        }
        break;
                    case 72:
        {
      ArrayList list = New72();
      Push(GoTo(23), list);
        }
        break;
                    case 73:
        {
      ArrayList list = New73();
      Push(GoTo(24), list);
        }
        break;
                    case 74:
        {
      ArrayList list = New74();
      Push(GoTo(24), list);
        }
        break;
                    case 75:
        {
      ArrayList list = New75();
      Push(GoTo(25), list);
        }
        break;
                    case 76:
        {
      ArrayList list = New76();
      Push(GoTo(25), list);
        }
        break;
                    case 77:
        {
      ArrayList list = New77();
      Push(GoTo(26), list);
        }
        break;
                    case 78:
        {
      ArrayList list = New78();
      Push(GoTo(26), list);
        }
        break;
                    case 79:
        {
      ArrayList list = New79();
      Push(GoTo(27), list);
        }
        break;
                    case 80:
        {
      ArrayList list = New80();
      Push(GoTo(27), list);
        }
        break;
                    case 81:
        {
      ArrayList list = New81();
      Push(GoTo(28), list);
        }
        break;
                    case 82:
        {
      ArrayList list = New82();
      Push(GoTo(28), list);
        }
        break;
                    case 83:
        {
      ArrayList list = New83();
      Push(GoTo(28), list);
        }
        break;
                    case 84:
        {
      ArrayList list = New84();
      Push(GoTo(28), list);
        }
        break;
                    case 85:
        {
      ArrayList list = New85();
      Push(GoTo(28), list);
        }
        break;
                    case 86:
        {
      ArrayList list = New86();
      Push(GoTo(28), list);
        }
        break;
                    case 87:
        {
      ArrayList list = New87();
      Push(GoTo(28), list);
        }
        break;
                    case 88:
        {
      ArrayList list = New88();
      Push(GoTo(28), list);
        }
        break;
                    case 89:
        {
      ArrayList list = New89();
      Push(GoTo(28), list);
        }
        break;
                    case 90:
        {
      ArrayList list = New90();
      Push(GoTo(28), list);
        }
        break;
                    case 91:
        {
      ArrayList list = New91();
      Push(GoTo(28), list);
        }
        break;
                    case 92:
        {
      ArrayList list = New92();
      Push(GoTo(28), list);
        }
        break;
                    case 93:
        {
      ArrayList list = New93();
      Push(GoTo(28), list);
        }
        break;
                    case 94:
        {
      ArrayList list = New94();
      Push(GoTo(28), list);
        }
        break;
                    case 95:
        {
      ArrayList list = New95();
      Push(GoTo(28), list);
        }
        break;
                    case 96:
        {
      ArrayList list = New96();
      Push(GoTo(28), list);
        }
        break;
                    case 97:
        {
      ArrayList list = New97();
      Push(GoTo(28), list);
        }
        break;
                    case 98:
        {
      ArrayList list = New98();
      Push(GoTo(28), list);
        }
        break;
                    case 99:
        {
      ArrayList list = New99();
      Push(GoTo(28), list);
        }
        break;
                    case 100:
        {
      ArrayList list = New100();
      Push(GoTo(28), list);
        }
        break;
                    case 101:
        {
      ArrayList list = New101();
      Push(GoTo(28), list);
        }
        break;
                    case 102:
        {
      ArrayList list = New102();
      Push(GoTo(28), list);
        }
        break;
                    case 103:
        {
      ArrayList list = New103();
      Push(GoTo(29), list);
        }
        break;
                    case 104:
        {
      ArrayList list = New104();
      Push(GoTo(29), list);
        }
        break;
                    case 105:
        {
      ArrayList list = New105();
      Push(GoTo(30), list);
        }
        break;
                    case 106:
        {
      ArrayList list = New106();
      Push(GoTo(30), list);
        }
        break;
                    case 107:
        {
      ArrayList list = New107();
      Push(GoTo(31), list);
        }
        break;
                    case 108:
        {
      ArrayList list = New108();
      Push(GoTo(32), list);
        }
        break;
                    case 109:
        {
      ArrayList list = New109();
      Push(GoTo(32), list);
        }
        break;
                    case 110:
        {
      ArrayList list = New110();
      Push(GoTo(32), list);
        }
        break;
                    case 111:
        {
      ArrayList list = New111();
      Push(GoTo(32), list);
        }
        break;
                    case 112:
        {
      ArrayList list = New112();
      Push(GoTo(33), list);
        }
        break;
                    case 113:
        {
      ArrayList list = New113();
      Push(GoTo(34), list);
        }
        break;
                    case 114:
        {
      ArrayList list = New114();
      Push(GoTo(34), list);
        }
        break;
                    case 115:
        {
      ArrayList list = New115();
      Push(GoTo(34), list);
        }
        break;
                    case 116:
        {
      ArrayList list = New116();
      Push(GoTo(34), list);
        }
        break;
                    case 117:
        {
      ArrayList list = New117();
      Push(GoTo(35), list);
        }
        break;
                    case 118:
        {
      ArrayList list = New118();
      Push(GoTo(35), list);
        }
        break;
                    case 119:
        {
      ArrayList list = New119();
      Push(GoTo(35), list);
        }
        break;
                    case 120:
        {
      ArrayList list = New120();
      Push(GoTo(35), list);
        }
        break;
                    case 121:
        {
      ArrayList list = New121();
      Push(GoTo(35), list);
        }
        break;
                    case 122:
        {
      ArrayList list = New122();
      Push(GoTo(35), list);
        }
        break;
                    case 123:
        {
      ArrayList list = New123();
      Push(GoTo(35), list);
        }
        break;
                    case 124:
        {
      ArrayList list = New124();
      Push(GoTo(36), list);
        }
        break;
                    case 125:
        {
      ArrayList list = New125();
      Push(GoTo(36), list);
        }
        break;
                    case 126:
        {
      ArrayList list = New126();
      Push(GoTo(36), list);
        }
        break;
                    case 127:
        {
      ArrayList list = New127();
      Push(GoTo(36), list);
        }
        break;
                    case 128:
        {
      ArrayList list = New128();
      Push(GoTo(36), list);
        }
        break;
                    case 129:
        {
      ArrayList list = New129();
      Push(GoTo(36), list);
        }
        break;
                    case 130:
        {
      ArrayList list = New130();
      Push(GoTo(36), list);
        }
        break;
                    case 131:
        {
      ArrayList list = New131();
      Push(GoTo(36), list);
        }
        break;
                    case 132:
        {
      ArrayList list = New132();
      Push(GoTo(36), list);
        }
        break;
                    case 133:
        {
      ArrayList list = New133();
      Push(GoTo(37), list);
        }
        break;
                    case 134:
        {
      ArrayList list = New134();
      Push(GoTo(37), list);
        }
        break;
                    case 135:
        {
      ArrayList list = New135();
      Push(GoTo(38), list);
        }
        break;
                    case 136:
        {
      ArrayList list = New136();
      Push(GoTo(38), list);
        }
        break;
                    case 137:
        {
      ArrayList list = New137();
      Push(GoTo(38), list);
        }
        break;
                    case 138:
        {
      ArrayList list = New138();
      Push(GoTo(38), list);
        }
        break;
                    case 139:
        {
      ArrayList list = New139();
      Push(GoTo(38), list);
        }
        break;
                    case 140:
        {
      ArrayList list = New140();
      Push(GoTo(38), list);
        }
        break;
                    case 141:
        {
      ArrayList list = New141();
      Push(GoTo(38), list);
        }
        break;
                    case 142:
        {
      ArrayList list = New142();
      Push(GoTo(38), list);
        }
        break;
                    case 143:
        {
      ArrayList list = New143();
      Push(GoTo(38), list);
        }
        break;
                    case 144:
        {
      ArrayList list = New144();
      Push(GoTo(38), list);
        }
        break;
                    case 145:
        {
      ArrayList list = New145();
      Push(GoTo(38), list);
        }
        break;
                    case 146:
        {
      ArrayList list = New146();
      Push(GoTo(39), list);
        }
        break;
                    case 147:
        {
      ArrayList list = New147();
      Push(GoTo(40), list);
        }
        break;
                    case 148:
        {
      ArrayList list = New148();
      Push(GoTo(40), list);
        }
        break;
                    case 149:
        {
      ArrayList list = New149();
      Push(GoTo(41), list);
        }
        break;
                    case 150:
        {
      ArrayList list = New150();
      Push(GoTo(41), list);
        }
        break;
                    case 151:
        {
      ArrayList list = New151();
      Push(GoTo(42), list);
        }
        break;
                    case 152:
        {
      ArrayList list = New152();
      Push(GoTo(42), list);
        }
        break;
                    case 153:
        {
      ArrayList list = New153();
      Push(GoTo(43), list);
        }
        break;
                    case 154:
        {
      ArrayList list = New154();
      Push(GoTo(43), list);
        }
        break;
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) lexer.Next();
                        PRecordDescription node1 = (PRecordDescription) ((ArrayList)Pop())[0];
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(last_token,
                        "[" + last_line + "," + last_pos + "] " +
                        errorMessages[errors[action[1]]]);
            }
        }
    }

    ArrayList New0()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        PGroupItem pgroupitemNode2 = (PGroupItem)nodeArrayList1[0];
        TDot tdotNode3 = (TDot)nodeArrayList2[0];
        ARecordDescription precorddescriptionNode1 = new ARecordDescription (
              pgroupitemNode2,
              tdotNode3
        );
        nodeList.Add(precorddescriptionNode1);
        return nodeList;
    }
    ArrayList New1()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        PElementaryItem pelementaryitemNode2 = (PElementaryItem)nodeArrayList1[0];
        ASingleGroupItem pgroupitemNode1 = new ASingleGroupItem (
              pelementaryitemNode2
        );
        nodeList.Add(pgroupitemNode1);
        return nodeList;
    }
    ArrayList New2()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList3 = (ArrayList) Pop();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        PGroupItem pgroupitemNode2 = (PGroupItem)nodeArrayList1[0];
        TDot tdotNode3 = (TDot)nodeArrayList2[0];
        PElementaryItem pelementaryitemNode4 = (PElementaryItem)nodeArrayList3[0];
        ASequenceGroupItem pgroupitemNode1 = new ASequenceGroupItem (
              pgroupitemNode2,
              tdotNode3,
              pelementaryitemNode4
        );
        nodeList.Add(pgroupitemNode1);
        return nodeList;
    }
    ArrayList New3()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        PItem pitemNode2 = (PItem)nodeArrayList1[0];
        AItemElementaryItem pelementaryitemNode1 = new AItemElementaryItem (
              pitemNode2
        );
        nodeList.Add(pelementaryitemNode1);
        return nodeList;
    }
    ArrayList New4()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        PRenamesItem prenamesitemNode2 = (PRenamesItem)nodeArrayList1[0];
        ARenamesItemElementaryItem pelementaryitemNode1 = new ARenamesItemElementaryItem (
              prenamesitemNode2
        );
        nodeList.Add(pelementaryitemNode1);
        return nodeList;
    }
    ArrayList New5()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        PValueItem pvalueitemNode2 = (PValueItem)nodeArrayList1[0];
        AValueItemElementaryItem pelementaryitemNode1 = new AValueItemElementaryItem (
              pvalueitemNode2
        );
        nodeList.Add(pelementaryitemNode1);
        return nodeList;
    }
    ArrayList New6()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TNumberNot88 tnumbernot88Node2 = (TNumberNot88)nodeArrayList1[0];
        AItem pitemNode1 = new AItem (
              tnumbernot88Node2,
              null,
              null,
              null
        );
        nodeList.Add(pitemNode1);
        return nodeList;
    }
    ArrayList New7()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TNumberNot88 tnumbernot88Node2 = (TNumberNot88)nodeArrayList1[0];
        PDataNameOrFiller pdatanameorfillerNode3 = (PDataNameOrFiller)nodeArrayList2[0];
        AItem pitemNode1 = new AItem (
              tnumbernot88Node2,
              pdatanameorfillerNode3,
              null,
              null
        );
        nodeList.Add(pitemNode1);
        return nodeList;
    }
    ArrayList New8()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TNumberNot88 tnumbernot88Node2 = (TNumberNot88)nodeArrayList1[0];
        PRedefinesClause predefinesclauseNode4 = (PRedefinesClause)nodeArrayList2[0];
        AItem pitemNode1 = new AItem (
              tnumbernot88Node2,
              null,
              predefinesclauseNode4,
              null
        );
        nodeList.Add(pitemNode1);
        return nodeList;
    }
    ArrayList New9()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList3 = (ArrayList) Pop();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TNumberNot88 tnumbernot88Node2 = (TNumberNot88)nodeArrayList1[0];
        PDataNameOrFiller pdatanameorfillerNode3 = (PDataNameOrFiller)nodeArrayList2[0];
        PRedefinesClause predefinesclauseNode4 = (PRedefinesClause)nodeArrayList3[0];
        AItem pitemNode1 = new AItem (
              tnumbernot88Node2,
              pdatanameorfillerNode3,
              predefinesclauseNode4,
              null
        );
        nodeList.Add(pitemNode1);
        return nodeList;
    }
    ArrayList New10()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TNumberNot88 tnumbernot88Node2 = (TNumberNot88)nodeArrayList1[0];
        PClauseSequence pclausesequenceNode5 = (PClauseSequence)nodeArrayList2[0];
        AItem pitemNode1 = new AItem (
              tnumbernot88Node2,
              null,
              null,
              pclausesequenceNode5
        );
        nodeList.Add(pitemNode1);
        return nodeList;
    }
    ArrayList New11()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList3 = (ArrayList) Pop();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TNumberNot88 tnumbernot88Node2 = (TNumberNot88)nodeArrayList1[0];
        PDataNameOrFiller pdatanameorfillerNode3 = (PDataNameOrFiller)nodeArrayList2[0];
        PClauseSequence pclausesequenceNode5 = (PClauseSequence)nodeArrayList3[0];
        AItem pitemNode1 = new AItem (
              tnumbernot88Node2,
              pdatanameorfillerNode3,
              null,
              pclausesequenceNode5
        );
        nodeList.Add(pitemNode1);
        return nodeList;
    }
    ArrayList New12()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList3 = (ArrayList) Pop();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TNumberNot88 tnumbernot88Node2 = (TNumberNot88)nodeArrayList1[0];
        PRedefinesClause predefinesclauseNode4 = (PRedefinesClause)nodeArrayList2[0];
        PClauseSequence pclausesequenceNode5 = (PClauseSequence)nodeArrayList3[0];
        AItem pitemNode1 = new AItem (
              tnumbernot88Node2,
              null,
              predefinesclauseNode4,
              pclausesequenceNode5
        );
        nodeList.Add(pitemNode1);
        return nodeList;
    }
    ArrayList New13()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList4 = (ArrayList) Pop();
        ArrayList nodeArrayList3 = (ArrayList) Pop();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TNumberNot88 tnumbernot88Node2 = (TNumberNot88)nodeArrayList1[0];
        PDataNameOrFiller pdatanameorfillerNode3 = (PDataNameOrFiller)nodeArrayList2[0];
        PRedefinesClause predefinesclauseNode4 = (PRedefinesClause)nodeArrayList3[0];
        PClauseSequence pclausesequenceNode5 = (PClauseSequence)nodeArrayList4[0];
        AItem pitemNode1 = new AItem (
              tnumbernot88Node2,
              pdatanameorfillerNode3,
              predefinesclauseNode4,
              pclausesequenceNode5
        );
        nodeList.Add(pitemNode1);
        return nodeList;
    }
    ArrayList New14()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TDataName tdatanameNode2 = (TDataName)nodeArrayList1[0];
        ADataNameDataNameOrFiller pdatanameorfillerNode1 = new ADataNameDataNameOrFiller (
              tdatanameNode2
        );
        nodeList.Add(pdatanameorfillerNode1);
        return nodeList;
    }
    ArrayList New15()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TFiller tfillerNode2 = (TFiller)nodeArrayList1[0];
        AFillerDataNameOrFiller pdatanameorfillerNode1 = new AFillerDataNameOrFiller (
              tfillerNode2
        );
        nodeList.Add(pdatanameorfillerNode1);
        return nodeList;
    }
    ArrayList New16()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TRedefines tredefinesNode2 = (TRedefines)nodeArrayList1[0];
        TDataName tdatanameNode3 = (TDataName)nodeArrayList2[0];
        ARedefinesClause predefinesclauseNode1 = new ARedefinesClause (
              tredefinesNode2,
              tdatanameNode3
        );
        nodeList.Add(predefinesclauseNode1);
        return nodeList;
    }
    ArrayList New17()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        PClause pclauseNode2 = (PClause)nodeArrayList1[0];
        ASingleClauseSequence pclausesequenceNode1 = new ASingleClauseSequence (
              pclauseNode2
        );
        nodeList.Add(pclausesequenceNode1);
        return nodeList;
    }
    ArrayList New18()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        PClauseSequence pclausesequenceNode2 = (PClauseSequence)nodeArrayList1[0];
        PClause pclauseNode3 = (PClause)nodeArrayList2[0];
        ASequenceClauseSequence pclausesequenceNode1 = new ASequenceClauseSequence (
              pclausesequenceNode2,
              pclauseNode3
        );
        nodeList.Add(pclausesequenceNode1);
        return nodeList;
    }
    ArrayList New19()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        PBlankWhenZeroClause pblankwhenzeroclauseNode2 = (PBlankWhenZeroClause)nodeArrayList1[0];
        ABlankWhenZeroClauseClause pclauseNode1 = new ABlankWhenZeroClauseClause (
              pblankwhenzeroclauseNode2
        );
        nodeList.Add(pclauseNode1);
        return nodeList;
    }
    ArrayList New20()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        PDateFormatClause pdateformatclauseNode2 = (PDateFormatClause)nodeArrayList1[0];
        ADateFormatClauseClause pclauseNode1 = new ADateFormatClauseClause (
              pdateformatclauseNode2
        );
        nodeList.Add(pclauseNode1);
        return nodeList;
    }
    ArrayList New21()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        PExternalClause pexternalclauseNode2 = (PExternalClause)nodeArrayList1[0];
        AExternalClauseClause pclauseNode1 = new AExternalClauseClause (
              pexternalclauseNode2
        );
        nodeList.Add(pclauseNode1);
        return nodeList;
    }
    ArrayList New22()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        PGlobalClause pglobalclauseNode2 = (PGlobalClause)nodeArrayList1[0];
        AGlobalClauseClause pclauseNode1 = new AGlobalClauseClause (
              pglobalclauseNode2
        );
        nodeList.Add(pclauseNode1);
        return nodeList;
    }
    ArrayList New23()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        PJustifiedClause pjustifiedclauseNode2 = (PJustifiedClause)nodeArrayList1[0];
        AJustifiedClauseClause pclauseNode1 = new AJustifiedClauseClause (
              pjustifiedclauseNode2
        );
        nodeList.Add(pclauseNode1);
        return nodeList;
    }
    ArrayList New24()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        POccursClause poccursclauseNode2 = (POccursClause)nodeArrayList1[0];
        AOccursClauseClause pclauseNode1 = new AOccursClauseClause (
              poccursclauseNode2
        );
        nodeList.Add(pclauseNode1);
        return nodeList;
    }
    ArrayList New25()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        PPictureClause ppictureclauseNode2 = (PPictureClause)nodeArrayList1[0];
        APictureClauseClause pclauseNode1 = new APictureClauseClause (
              ppictureclauseNode2
        );
        nodeList.Add(pclauseNode1);
        return nodeList;
    }
    ArrayList New26()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        PSignClause psignclauseNode2 = (PSignClause)nodeArrayList1[0];
        ASignClauseClause pclauseNode1 = new ASignClauseClause (
              psignclauseNode2
        );
        nodeList.Add(pclauseNode1);
        return nodeList;
    }
    ArrayList New27()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        PSynchronizedClause psynchronizedclauseNode2 = (PSynchronizedClause)nodeArrayList1[0];
        ASynchronizedClauseClause pclauseNode1 = new ASynchronizedClauseClause (
              psynchronizedclauseNode2
        );
        nodeList.Add(pclauseNode1);
        return nodeList;
    }
    ArrayList New28()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        PUsageClause pusageclauseNode2 = (PUsageClause)nodeArrayList1[0];
        AUsageClauseClause pclauseNode1 = new AUsageClauseClause (
              pusageclauseNode2
        );
        nodeList.Add(pclauseNode1);
        return nodeList;
    }
    ArrayList New29()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        PValueClause pvalueclauseNode2 = (PValueClause)nodeArrayList1[0];
        AValueClauseClause pclauseNode1 = new AValueClauseClause (
              pvalueclauseNode2
        );
        nodeList.Add(pclauseNode1);
        return nodeList;
    }
    ArrayList New30()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TBlank tblankNode2 = (TBlank)nodeArrayList1[0];
        TZeros tzerosNode4 = (TZeros)nodeArrayList2[0];
        ABlankWhenZeroClause pblankwhenzeroclauseNode1 = new ABlankWhenZeroClause (
              tblankNode2,
              null,
              tzerosNode4
        );
        nodeList.Add(pblankwhenzeroclauseNode1);
        return nodeList;
    }
    ArrayList New31()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList3 = (ArrayList) Pop();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TBlank tblankNode2 = (TBlank)nodeArrayList1[0];
        TWhen twhenNode3 = (TWhen)nodeArrayList2[0];
        TZeros tzerosNode4 = (TZeros)nodeArrayList3[0];
        ABlankWhenZeroClause pblankwhenzeroclauseNode1 = new ABlankWhenZeroClause (
              tblankNode2,
              twhenNode3,
              tzerosNode4
        );
        nodeList.Add(pblankwhenzeroclauseNode1);
        return nodeList;
    }
    ArrayList New32()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList3 = (ArrayList) Pop();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TDate tdateNode2 = (TDate)nodeArrayList1[0];
        TFormat tformatNode3 = (TFormat)nodeArrayList2[0];
        TDataName tdatanameNode5 = (TDataName)nodeArrayList3[0];
        ADateFormatClause pdateformatclauseNode1 = new ADateFormatClause (
              tdateNode2,
              tformatNode3,
              null,
              tdatanameNode5
        );
        nodeList.Add(pdateformatclauseNode1);
        return nodeList;
    }
    ArrayList New33()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList4 = (ArrayList) Pop();
        ArrayList nodeArrayList3 = (ArrayList) Pop();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TDate tdateNode2 = (TDate)nodeArrayList1[0];
        TFormat tformatNode3 = (TFormat)nodeArrayList2[0];
        TIs tisNode4 = (TIs)nodeArrayList3[0];
        TDataName tdatanameNode5 = (TDataName)nodeArrayList4[0];
        ADateFormatClause pdateformatclauseNode1 = new ADateFormatClause (
              tdateNode2,
              tformatNode3,
              tisNode4,
              tdatanameNode5
        );
        nodeList.Add(pdateformatclauseNode1);
        return nodeList;
    }
    ArrayList New34()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TExternal texternalNode2 = (TExternal)nodeArrayList1[0];
        AExternalClause pexternalclauseNode1 = new AExternalClause (
              texternalNode2
        );
        nodeList.Add(pexternalclauseNode1);
        return nodeList;
    }
    ArrayList New35()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TGlobal tglobalNode2 = (TGlobal)nodeArrayList1[0];
        AGlobalClause pglobalclauseNode1 = new AGlobalClause (
              tglobalNode2
        );
        nodeList.Add(pglobalclauseNode1);
        return nodeList;
    }
    ArrayList New36()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TJustified tjustifiedNode2 = (TJustified)nodeArrayList1[0];
        AJustifiedClause pjustifiedclauseNode1 = new AJustifiedClause (
              tjustifiedNode2,
              null
        );
        nodeList.Add(pjustifiedclauseNode1);
        return nodeList;
    }
    ArrayList New37()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TJustified tjustifiedNode2 = (TJustified)nodeArrayList1[0];
        TRight trightNode3 = (TRight)nodeArrayList2[0];
        AJustifiedClause pjustifiedclauseNode1 = new AJustifiedClause (
              tjustifiedNode2,
              trightNode3
        );
        nodeList.Add(pjustifiedclauseNode1);
        return nodeList;
    }
    ArrayList New38()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TypedList listNode3 = new TypedList();
        TypedList listNode4 = new TypedList();
        POccursFixedOrVariable poccursfixedorvariableNode2 = (POccursFixedOrVariable)nodeArrayList1[0];
        AOccursClause poccursclauseNode1 = new AOccursClause (
              poccursfixedorvariableNode2,
              listNode3,
              listNode4
        );
        nodeList.Add(poccursclauseNode1);
        return nodeList;
    }
    ArrayList New39()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TypedList listNode4 = new TypedList();
        TypedList listNode5 = new TypedList();
        POccursFixedOrVariable poccursfixedorvariableNode2 = (POccursFixedOrVariable)nodeArrayList1[0];
        TypedList listNode3 = (TypedList)nodeArrayList2[0];
        if ( listNode3 != null )
        {
            listNode4.AddAll(listNode3);
        }
        AOccursClause poccursclauseNode1 = new AOccursClause (
              poccursfixedorvariableNode2,
              listNode4,
              listNode5
        );
        nodeList.Add(poccursclauseNode1);
        return nodeList;
    }
    ArrayList New40()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TypedList listNode3 = new TypedList();
        TypedList listNode5 = new TypedList();
        POccursFixedOrVariable poccursfixedorvariableNode2 = (POccursFixedOrVariable)nodeArrayList1[0];
        TypedList listNode4 = (TypedList)nodeArrayList2[0];
        if ( listNode4 != null )
        {
            listNode5.AddAll(listNode4);
        }
        AOccursClause poccursclauseNode1 = new AOccursClause (
              poccursfixedorvariableNode2,
              listNode3,
              listNode5
        );
        nodeList.Add(poccursclauseNode1);
        return nodeList;
    }
    ArrayList New41()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList3 = (ArrayList) Pop();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TypedList listNode4 = new TypedList();
        TypedList listNode6 = new TypedList();
        POccursFixedOrVariable poccursfixedorvariableNode2 = (POccursFixedOrVariable)nodeArrayList1[0];
        TypedList listNode3 = (TypedList)nodeArrayList2[0];
        if ( listNode3 != null )
        {
            listNode4.AddAll(listNode3);
        }
        TypedList listNode5 = (TypedList)nodeArrayList3[0];
        if ( listNode5 != null )
        {
            listNode6.AddAll(listNode5);
        }
        AOccursClause poccursclauseNode1 = new AOccursClause (
              poccursfixedorvariableNode2,
              listNode4,
              listNode6
        );
        nodeList.Add(poccursclauseNode1);
        return nodeList;
    }
    ArrayList New42()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TOccurs toccursNode2 = (TOccurs)nodeArrayList1[0];
        PNumber pnumberNode3 = (PNumber)nodeArrayList2[0];
        AFixedOccursFixedOrVariable poccursfixedorvariableNode1 = new AFixedOccursFixedOrVariable (
              toccursNode2,
              pnumberNode3,
              null
        );
        nodeList.Add(poccursfixedorvariableNode1);
        return nodeList;
    }
    ArrayList New43()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList3 = (ArrayList) Pop();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TOccurs toccursNode2 = (TOccurs)nodeArrayList1[0];
        PNumber pnumberNode3 = (PNumber)nodeArrayList2[0];
        TTimes ttimesNode4 = (TTimes)nodeArrayList3[0];
        AFixedOccursFixedOrVariable poccursfixedorvariableNode1 = new AFixedOccursFixedOrVariable (
              toccursNode2,
              pnumberNode3,
              ttimesNode4
        );
        nodeList.Add(poccursfixedorvariableNode1);
        return nodeList;
    }
    ArrayList New44()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList4 = (ArrayList) Pop();
        ArrayList nodeArrayList3 = (ArrayList) Pop();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TOccurs toccursNode2 = (TOccurs)nodeArrayList1[0];
        PNumber pnumberNode4 = (PNumber)nodeArrayList2[0];
        TDepending tdependingNode6 = (TDepending)nodeArrayList3[0];
        TDataName tdatanameNode8 = (TDataName)nodeArrayList4[0];
        AVariableOccursFixedOrVariable poccursfixedorvariableNode1 = new AVariableOccursFixedOrVariable (
              toccursNode2,
              null,
              pnumberNode4,
              null,
              tdependingNode6,
              null,
              tdatanameNode8
        );
        nodeList.Add(poccursfixedorvariableNode1);
        return nodeList;
    }
    ArrayList New45()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList5 = (ArrayList) Pop();
        ArrayList nodeArrayList4 = (ArrayList) Pop();
        ArrayList nodeArrayList3 = (ArrayList) Pop();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TOccurs toccursNode2 = (TOccurs)nodeArrayList1[0];
        POccursTo poccurstoNode3 = (POccursTo)nodeArrayList2[0];
        PNumber pnumberNode4 = (PNumber)nodeArrayList3[0];
        TDepending tdependingNode6 = (TDepending)nodeArrayList4[0];
        TDataName tdatanameNode8 = (TDataName)nodeArrayList5[0];
        AVariableOccursFixedOrVariable poccursfixedorvariableNode1 = new AVariableOccursFixedOrVariable (
              toccursNode2,
              poccurstoNode3,
              pnumberNode4,
              null,
              tdependingNode6,
              null,
              tdatanameNode8
        );
        nodeList.Add(poccursfixedorvariableNode1);
        return nodeList;
    }
    ArrayList New46()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList5 = (ArrayList) Pop();
        ArrayList nodeArrayList4 = (ArrayList) Pop();
        ArrayList nodeArrayList3 = (ArrayList) Pop();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TOccurs toccursNode2 = (TOccurs)nodeArrayList1[0];
        PNumber pnumberNode4 = (PNumber)nodeArrayList2[0];
        TTimes ttimesNode5 = (TTimes)nodeArrayList3[0];
        TDepending tdependingNode6 = (TDepending)nodeArrayList4[0];
        TDataName tdatanameNode8 = (TDataName)nodeArrayList5[0];
        AVariableOccursFixedOrVariable poccursfixedorvariableNode1 = new AVariableOccursFixedOrVariable (
              toccursNode2,
              null,
              pnumberNode4,
              ttimesNode5,
              tdependingNode6,
              null,
              tdatanameNode8
        );
        nodeList.Add(poccursfixedorvariableNode1);
        return nodeList;
    }
    ArrayList New47()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList6 = (ArrayList) Pop();
        ArrayList nodeArrayList5 = (ArrayList) Pop();
        ArrayList nodeArrayList4 = (ArrayList) Pop();
        ArrayList nodeArrayList3 = (ArrayList) Pop();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TOccurs toccursNode2 = (TOccurs)nodeArrayList1[0];
        POccursTo poccurstoNode3 = (POccursTo)nodeArrayList2[0];
        PNumber pnumberNode4 = (PNumber)nodeArrayList3[0];
        TTimes ttimesNode5 = (TTimes)nodeArrayList4[0];
        TDepending tdependingNode6 = (TDepending)nodeArrayList5[0];
        TDataName tdatanameNode8 = (TDataName)nodeArrayList6[0];
        AVariableOccursFixedOrVariable poccursfixedorvariableNode1 = new AVariableOccursFixedOrVariable (
              toccursNode2,
              poccurstoNode3,
              pnumberNode4,
              ttimesNode5,
              tdependingNode6,
              null,
              tdatanameNode8
        );
        nodeList.Add(poccursfixedorvariableNode1);
        return nodeList;
    }
    ArrayList New48()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList5 = (ArrayList) Pop();
        ArrayList nodeArrayList4 = (ArrayList) Pop();
        ArrayList nodeArrayList3 = (ArrayList) Pop();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TOccurs toccursNode2 = (TOccurs)nodeArrayList1[0];
        PNumber pnumberNode4 = (PNumber)nodeArrayList2[0];
        TDepending tdependingNode6 = (TDepending)nodeArrayList3[0];
        TOn tonNode7 = (TOn)nodeArrayList4[0];
        TDataName tdatanameNode8 = (TDataName)nodeArrayList5[0];
        AVariableOccursFixedOrVariable poccursfixedorvariableNode1 = new AVariableOccursFixedOrVariable (
              toccursNode2,
              null,
              pnumberNode4,
              null,
              tdependingNode6,
              tonNode7,
              tdatanameNode8
        );
        nodeList.Add(poccursfixedorvariableNode1);
        return nodeList;
    }
    ArrayList New49()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList6 = (ArrayList) Pop();
        ArrayList nodeArrayList5 = (ArrayList) Pop();
        ArrayList nodeArrayList4 = (ArrayList) Pop();
        ArrayList nodeArrayList3 = (ArrayList) Pop();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TOccurs toccursNode2 = (TOccurs)nodeArrayList1[0];
        POccursTo poccurstoNode3 = (POccursTo)nodeArrayList2[0];
        PNumber pnumberNode4 = (PNumber)nodeArrayList3[0];
        TDepending tdependingNode6 = (TDepending)nodeArrayList4[0];
        TOn tonNode7 = (TOn)nodeArrayList5[0];
        TDataName tdatanameNode8 = (TDataName)nodeArrayList6[0];
        AVariableOccursFixedOrVariable poccursfixedorvariableNode1 = new AVariableOccursFixedOrVariable (
              toccursNode2,
              poccurstoNode3,
              pnumberNode4,
              null,
              tdependingNode6,
              tonNode7,
              tdatanameNode8
        );
        nodeList.Add(poccursfixedorvariableNode1);
        return nodeList;
    }
    ArrayList New50()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList6 = (ArrayList) Pop();
        ArrayList nodeArrayList5 = (ArrayList) Pop();
        ArrayList nodeArrayList4 = (ArrayList) Pop();
        ArrayList nodeArrayList3 = (ArrayList) Pop();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TOccurs toccursNode2 = (TOccurs)nodeArrayList1[0];
        PNumber pnumberNode4 = (PNumber)nodeArrayList2[0];
        TTimes ttimesNode5 = (TTimes)nodeArrayList3[0];
        TDepending tdependingNode6 = (TDepending)nodeArrayList4[0];
        TOn tonNode7 = (TOn)nodeArrayList5[0];
        TDataName tdatanameNode8 = (TDataName)nodeArrayList6[0];
        AVariableOccursFixedOrVariable poccursfixedorvariableNode1 = new AVariableOccursFixedOrVariable (
              toccursNode2,
              null,
              pnumberNode4,
              ttimesNode5,
              tdependingNode6,
              tonNode7,
              tdatanameNode8
        );
        nodeList.Add(poccursfixedorvariableNode1);
        return nodeList;
    }
    ArrayList New51()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList7 = (ArrayList) Pop();
        ArrayList nodeArrayList6 = (ArrayList) Pop();
        ArrayList nodeArrayList5 = (ArrayList) Pop();
        ArrayList nodeArrayList4 = (ArrayList) Pop();
        ArrayList nodeArrayList3 = (ArrayList) Pop();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TOccurs toccursNode2 = (TOccurs)nodeArrayList1[0];
        POccursTo poccurstoNode3 = (POccursTo)nodeArrayList2[0];
        PNumber pnumberNode4 = (PNumber)nodeArrayList3[0];
        TTimes ttimesNode5 = (TTimes)nodeArrayList4[0];
        TDepending tdependingNode6 = (TDepending)nodeArrayList5[0];
        TOn tonNode7 = (TOn)nodeArrayList6[0];
        TDataName tdatanameNode8 = (TDataName)nodeArrayList7[0];
        AVariableOccursFixedOrVariable poccursfixedorvariableNode1 = new AVariableOccursFixedOrVariable (
              toccursNode2,
              poccurstoNode3,
              pnumberNode4,
              ttimesNode5,
              tdependingNode6,
              tonNode7,
              tdatanameNode8
        );
        nodeList.Add(poccursfixedorvariableNode1);
        return nodeList;
    }
    ArrayList New52()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        PNumber pnumberNode2 = (PNumber)nodeArrayList1[0];
        TTo ttoNode3 = (TTo)nodeArrayList2[0];
        AOccursTo poccurstoNode1 = new AOccursTo (
              pnumberNode2,
              ttoNode3
        );
        nodeList.Add(poccurstoNode1);
        return nodeList;
    }
    ArrayList New53()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TypedList listNode6 = new TypedList();
        PAscendingOrDescending pascendingordescendingNode2 = (PAscendingOrDescending)nodeArrayList1[0];
        TypedList listNode5 = (TypedList)nodeArrayList2[0];
        if ( listNode5 != null )
        {
            listNode6.AddAll(listNode5);
        }
        AAscendingOrDescendingKeyPhrase pascendingordescendingkeyphraseNode1 = new AAscendingOrDescendingKeyPhrase (
              pascendingordescendingNode2,
              null,
              null,
              listNode6
        );
        nodeList.Add(pascendingordescendingkeyphraseNode1);
        return nodeList;
    }
    ArrayList New54()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList3 = (ArrayList) Pop();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TypedList listNode6 = new TypedList();
        PAscendingOrDescending pascendingordescendingNode2 = (PAscendingOrDescending)nodeArrayList1[0];
        TKey tkeyNode3 = (TKey)nodeArrayList2[0];
        TypedList listNode5 = (TypedList)nodeArrayList3[0];
        if ( listNode5 != null )
        {
            listNode6.AddAll(listNode5);
        }
        AAscendingOrDescendingKeyPhrase pascendingordescendingkeyphraseNode1 = new AAscendingOrDescendingKeyPhrase (
              pascendingordescendingNode2,
              tkeyNode3,
              null,
              listNode6
        );
        nodeList.Add(pascendingordescendingkeyphraseNode1);
        return nodeList;
    }
    ArrayList New55()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList3 = (ArrayList) Pop();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TypedList listNode6 = new TypedList();
        PAscendingOrDescending pascendingordescendingNode2 = (PAscendingOrDescending)nodeArrayList1[0];
        TIs tisNode4 = (TIs)nodeArrayList2[0];
        TypedList listNode5 = (TypedList)nodeArrayList3[0];
        if ( listNode5 != null )
        {
            listNode6.AddAll(listNode5);
        }
        AAscendingOrDescendingKeyPhrase pascendingordescendingkeyphraseNode1 = new AAscendingOrDescendingKeyPhrase (
              pascendingordescendingNode2,
              null,
              tisNode4,
              listNode6
        );
        nodeList.Add(pascendingordescendingkeyphraseNode1);
        return nodeList;
    }
    ArrayList New56()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList4 = (ArrayList) Pop();
        ArrayList nodeArrayList3 = (ArrayList) Pop();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TypedList listNode6 = new TypedList();
        PAscendingOrDescending pascendingordescendingNode2 = (PAscendingOrDescending)nodeArrayList1[0];
        TKey tkeyNode3 = (TKey)nodeArrayList2[0];
        TIs tisNode4 = (TIs)nodeArrayList3[0];
        TypedList listNode5 = (TypedList)nodeArrayList4[0];
        if ( listNode5 != null )
        {
            listNode6.AddAll(listNode5);
        }
        AAscendingOrDescendingKeyPhrase pascendingordescendingkeyphraseNode1 = new AAscendingOrDescendingKeyPhrase (
              pascendingordescendingNode2,
              tkeyNode3,
              tisNode4,
              listNode6
        );
        nodeList.Add(pascendingordescendingkeyphraseNode1);
        return nodeList;
    }
    ArrayList New57()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TAscending tascendingNode2 = (TAscending)nodeArrayList1[0];
        AAscendingAscendingOrDescending pascendingordescendingNode1 = new AAscendingAscendingOrDescending (
              tascendingNode2
        );
        nodeList.Add(pascendingordescendingNode1);
        return nodeList;
    }
    ArrayList New58()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TDescending tdescendingNode2 = (TDescending)nodeArrayList1[0];
        ADescendingAscendingOrDescending pascendingordescendingNode1 = new ADescendingAscendingOrDescending (
              tdescendingNode2
        );
        nodeList.Add(pascendingordescendingNode1);
        return nodeList;
    }
    ArrayList New59()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TypedList listNode5 = new TypedList();
        TIndexed tindexedNode2 = (TIndexed)nodeArrayList1[0];
        TypedList listNode4 = (TypedList)nodeArrayList2[0];
        if ( listNode4 != null )
        {
            listNode5.AddAll(listNode4);
        }
        AIndexedByPhrase pindexedbyphraseNode1 = new AIndexedByPhrase (
              tindexedNode2,
              null,
              listNode5
        );
        nodeList.Add(pindexedbyphraseNode1);
        return nodeList;
    }
    ArrayList New60()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList3 = (ArrayList) Pop();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TypedList listNode5 = new TypedList();
        TIndexed tindexedNode2 = (TIndexed)nodeArrayList1[0];
        TBy tbyNode3 = (TBy)nodeArrayList2[0];
        TypedList listNode4 = (TypedList)nodeArrayList3[0];
        if ( listNode4 != null )
        {
            listNode5.AddAll(listNode4);
        }
        AIndexedByPhrase pindexedbyphraseNode1 = new AIndexedByPhrase (
              tindexedNode2,
              tbyNode3,
              listNode5
        );
        nodeList.Add(pindexedbyphraseNode1);
        return nodeList;
    }
    ArrayList New61()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TPicture tpictureNode2 = (TPicture)nodeArrayList1[0];
        PCharacterString pcharacterstringNode4 = (PCharacterString)nodeArrayList2[0];
        APictureClause ppictureclauseNode1 = new APictureClause (
              tpictureNode2,
              null,
              pcharacterstringNode4
        );
        nodeList.Add(ppictureclauseNode1);
        return nodeList;
    }
    ArrayList New62()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList3 = (ArrayList) Pop();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TPicture tpictureNode2 = (TPicture)nodeArrayList1[0];
        TIs tisNode3 = (TIs)nodeArrayList2[0];
        PCharacterString pcharacterstringNode4 = (PCharacterString)nodeArrayList3[0];
        APictureClause ppictureclauseNode1 = new APictureClause (
              tpictureNode2,
              tisNode3,
              pcharacterstringNode4
        );
        nodeList.Add(ppictureclauseNode1);
        return nodeList;
    }
    ArrayList New63()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        PLeadingOrTrailing pleadingortrailingNode3 = (PLeadingOrTrailing)nodeArrayList1[0];
        ASignClause psignclauseNode1 = new ASignClause (
              null,
              pleadingortrailingNode3,
              null
        );
        nodeList.Add(psignclauseNode1);
        return nodeList;
    }
    ArrayList New64()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        PSignIs psignisNode2 = (PSignIs)nodeArrayList1[0];
        PLeadingOrTrailing pleadingortrailingNode3 = (PLeadingOrTrailing)nodeArrayList2[0];
        ASignClause psignclauseNode1 = new ASignClause (
              psignisNode2,
              pleadingortrailingNode3,
              null
        );
        nodeList.Add(psignclauseNode1);
        return nodeList;
    }
    ArrayList New65()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        PLeadingOrTrailing pleadingortrailingNode3 = (PLeadingOrTrailing)nodeArrayList1[0];
        PSeparateCharacter pseparatecharacterNode4 = (PSeparateCharacter)nodeArrayList2[0];
        ASignClause psignclauseNode1 = new ASignClause (
              null,
              pleadingortrailingNode3,
              pseparatecharacterNode4
        );
        nodeList.Add(psignclauseNode1);
        return nodeList;
    }
    ArrayList New66()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList3 = (ArrayList) Pop();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        PSignIs psignisNode2 = (PSignIs)nodeArrayList1[0];
        PLeadingOrTrailing pleadingortrailingNode3 = (PLeadingOrTrailing)nodeArrayList2[0];
        PSeparateCharacter pseparatecharacterNode4 = (PSeparateCharacter)nodeArrayList3[0];
        ASignClause psignclauseNode1 = new ASignClause (
              psignisNode2,
              pleadingortrailingNode3,
              pseparatecharacterNode4
        );
        nodeList.Add(psignclauseNode1);
        return nodeList;
    }
    ArrayList New67()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TSign tsignNode2 = (TSign)nodeArrayList1[0];
        ASignIs psignisNode1 = new ASignIs (
              tsignNode2,
              null
        );
        nodeList.Add(psignisNode1);
        return nodeList;
    }
    ArrayList New68()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TSign tsignNode2 = (TSign)nodeArrayList1[0];
        TIs tisNode3 = (TIs)nodeArrayList2[0];
        ASignIs psignisNode1 = new ASignIs (
              tsignNode2,
              tisNode3
        );
        nodeList.Add(psignisNode1);
        return nodeList;
    }
    ArrayList New69()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TLeading tleadingNode2 = (TLeading)nodeArrayList1[0];
        ALeadingLeadingOrTrailing pleadingortrailingNode1 = new ALeadingLeadingOrTrailing (
              tleadingNode2
        );
        nodeList.Add(pleadingortrailingNode1);
        return nodeList;
    }
    ArrayList New70()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TTrailing ttrailingNode2 = (TTrailing)nodeArrayList1[0];
        ATrailingLeadingOrTrailing pleadingortrailingNode1 = new ATrailingLeadingOrTrailing (
              ttrailingNode2
        );
        nodeList.Add(pleadingortrailingNode1);
        return nodeList;
    }
    ArrayList New71()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TSeparate tseparateNode2 = (TSeparate)nodeArrayList1[0];
        ASeparateCharacter pseparatecharacterNode1 = new ASeparateCharacter (
              tseparateNode2,
              null
        );
        nodeList.Add(pseparatecharacterNode1);
        return nodeList;
    }
    ArrayList New72()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TSeparate tseparateNode2 = (TSeparate)nodeArrayList1[0];
        TCharacter tcharacterNode3 = (TCharacter)nodeArrayList2[0];
        ASeparateCharacter pseparatecharacterNode1 = new ASeparateCharacter (
              tseparateNode2,
              tcharacterNode3
        );
        nodeList.Add(pseparatecharacterNode1);
        return nodeList;
    }
    ArrayList New73()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TSynchronized tsynchronizedNode2 = (TSynchronized)nodeArrayList1[0];
        ASynchronizedClause psynchronizedclauseNode1 = new ASynchronizedClause (
              tsynchronizedNode2,
              null
        );
        nodeList.Add(psynchronizedclauseNode1);
        return nodeList;
    }
    ArrayList New74()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TSynchronized tsynchronizedNode2 = (TSynchronized)nodeArrayList1[0];
        PLeftOrRight pleftorrightNode3 = (PLeftOrRight)nodeArrayList2[0];
        ASynchronizedClause psynchronizedclauseNode1 = new ASynchronizedClause (
              tsynchronizedNode2,
              pleftorrightNode3
        );
        nodeList.Add(psynchronizedclauseNode1);
        return nodeList;
    }
    ArrayList New75()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TLeft tleftNode2 = (TLeft)nodeArrayList1[0];
        ALeftLeftOrRight pleftorrightNode1 = new ALeftLeftOrRight (
              tleftNode2
        );
        nodeList.Add(pleftorrightNode1);
        return nodeList;
    }
    ArrayList New76()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TRight trightNode2 = (TRight)nodeArrayList1[0];
        ARightLeftOrRight pleftorrightNode1 = new ARightLeftOrRight (
              trightNode2
        );
        nodeList.Add(pleftorrightNode1);
        return nodeList;
    }
    ArrayList New77()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        PUsagePhrase pusagephraseNode3 = (PUsagePhrase)nodeArrayList1[0];
        AUsageClause pusageclauseNode1 = new AUsageClause (
              null,
              pusagephraseNode3
        );
        nodeList.Add(pusageclauseNode1);
        return nodeList;
    }
    ArrayList New78()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        PUsageIs pusageisNode2 = (PUsageIs)nodeArrayList1[0];
        PUsagePhrase pusagephraseNode3 = (PUsagePhrase)nodeArrayList2[0];
        AUsageClause pusageclauseNode1 = new AUsageClause (
              pusageisNode2,
              pusagephraseNode3
        );
        nodeList.Add(pusageclauseNode1);
        return nodeList;
    }
    ArrayList New79()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TUsage tusageNode2 = (TUsage)nodeArrayList1[0];
        AUsageIs pusageisNode1 = new AUsageIs (
              tusageNode2,
              null
        );
        nodeList.Add(pusageisNode1);
        return nodeList;
    }
    ArrayList New80()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TUsage tusageNode2 = (TUsage)nodeArrayList1[0];
        TIs tisNode3 = (TIs)nodeArrayList2[0];
        AUsageIs pusageisNode1 = new AUsageIs (
              tusageNode2,
              tisNode3
        );
        nodeList.Add(pusageisNode1);
        return nodeList;
    }
    ArrayList New81()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TBinary tbinaryNode2 = (TBinary)nodeArrayList1[0];
        ABinaryUsagePhrase pusagephraseNode1 = new ABinaryUsagePhrase (
              tbinaryNode2,
              null
        );
        nodeList.Add(pusagephraseNode1);
        return nodeList;
    }
    ArrayList New82()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TBinary tbinaryNode2 = (TBinary)nodeArrayList1[0];
        TNative tnativeNode3 = (TNative)nodeArrayList2[0];
        ABinaryUsagePhrase pusagephraseNode1 = new ABinaryUsagePhrase (
              tbinaryNode2,
              tnativeNode3
        );
        nodeList.Add(pusagephraseNode1);
        return nodeList;
    }
    ArrayList New83()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TComp tcompNode2 = (TComp)nodeArrayList1[0];
        ACompUsagePhrase pusagephraseNode1 = new ACompUsagePhrase (
              tcompNode2
        );
        nodeList.Add(pusagephraseNode1);
        return nodeList;
    }
    ArrayList New84()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TComp1 tcomp1Node2 = (TComp1)nodeArrayList1[0];
        AComp1UsagePhrase pusagephraseNode1 = new AComp1UsagePhrase (
              tcomp1Node2,
              null
        );
        nodeList.Add(pusagephraseNode1);
        return nodeList;
    }
    ArrayList New85()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TComp1 tcomp1Node2 = (TComp1)nodeArrayList1[0];
        TNative tnativeNode3 = (TNative)nodeArrayList2[0];
        AComp1UsagePhrase pusagephraseNode1 = new AComp1UsagePhrase (
              tcomp1Node2,
              tnativeNode3
        );
        nodeList.Add(pusagephraseNode1);
        return nodeList;
    }
    ArrayList New86()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TComp2 tcomp2Node2 = (TComp2)nodeArrayList1[0];
        AComp2UsagePhrase pusagephraseNode1 = new AComp2UsagePhrase (
              tcomp2Node2,
              null
        );
        nodeList.Add(pusagephraseNode1);
        return nodeList;
    }
    ArrayList New87()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TComp2 tcomp2Node2 = (TComp2)nodeArrayList1[0];
        TNative tnativeNode3 = (TNative)nodeArrayList2[0];
        AComp2UsagePhrase pusagephraseNode1 = new AComp2UsagePhrase (
              tcomp2Node2,
              tnativeNode3
        );
        nodeList.Add(pusagephraseNode1);
        return nodeList;
    }
    ArrayList New88()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TComp3 tcomp3Node2 = (TComp3)nodeArrayList1[0];
        AComp3UsagePhrase pusagephraseNode1 = new AComp3UsagePhrase (
              tcomp3Node2
        );
        nodeList.Add(pusagephraseNode1);
        return nodeList;
    }
    ArrayList New89()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TComp4 tcomp4Node2 = (TComp4)nodeArrayList1[0];
        AComp4UsagePhrase pusagephraseNode1 = new AComp4UsagePhrase (
              tcomp4Node2,
              null
        );
        nodeList.Add(pusagephraseNode1);
        return nodeList;
    }
    ArrayList New90()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TComp4 tcomp4Node2 = (TComp4)nodeArrayList1[0];
        TNative tnativeNode3 = (TNative)nodeArrayList2[0];
        AComp4UsagePhrase pusagephraseNode1 = new AComp4UsagePhrase (
              tcomp4Node2,
              tnativeNode3
        );
        nodeList.Add(pusagephraseNode1);
        return nodeList;
    }
    ArrayList New91()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TComp5 tcomp5Node2 = (TComp5)nodeArrayList1[0];
        AComp5UsagePhrase pusagephraseNode1 = new AComp5UsagePhrase (
              tcomp5Node2
        );
        nodeList.Add(pusagephraseNode1);
        return nodeList;
    }
    ArrayList New92()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TDisplay tdisplayNode2 = (TDisplay)nodeArrayList1[0];
        ADisplayUsagePhrase pusagephraseNode1 = new ADisplayUsagePhrase (
              tdisplayNode2,
              null
        );
        nodeList.Add(pusagephraseNode1);
        return nodeList;
    }
    ArrayList New93()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TDisplay tdisplayNode2 = (TDisplay)nodeArrayList1[0];
        TNative tnativeNode3 = (TNative)nodeArrayList2[0];
        ADisplayUsagePhrase pusagephraseNode1 = new ADisplayUsagePhrase (
              tdisplayNode2,
              tnativeNode3
        );
        nodeList.Add(pusagephraseNode1);
        return nodeList;
    }
    ArrayList New94()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TDisplay1 tdisplay1Node2 = (TDisplay1)nodeArrayList1[0];
        ADisplay1UsagePhrase pusagephraseNode1 = new ADisplay1UsagePhrase (
              tdisplay1Node2,
              null
        );
        nodeList.Add(pusagephraseNode1);
        return nodeList;
    }
    ArrayList New95()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TDisplay1 tdisplay1Node2 = (TDisplay1)nodeArrayList1[0];
        TNative tnativeNode3 = (TNative)nodeArrayList2[0];
        ADisplay1UsagePhrase pusagephraseNode1 = new ADisplay1UsagePhrase (
              tdisplay1Node2,
              tnativeNode3
        );
        nodeList.Add(pusagephraseNode1);
        return nodeList;
    }
    ArrayList New96()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TIndex tindexNode2 = (TIndex)nodeArrayList1[0];
        AIndexUsagePhrase pusagephraseNode1 = new AIndexUsagePhrase (
              tindexNode2
        );
        nodeList.Add(pusagephraseNode1);
        return nodeList;
    }
    ArrayList New97()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TNational tnationalNode2 = (TNational)nodeArrayList1[0];
        ANationalUsagePhrase pusagephraseNode1 = new ANationalUsagePhrase (
              tnationalNode2
        );
        nodeList.Add(pusagephraseNode1);
        return nodeList;
    }
    ArrayList New98()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        PObjectReferencePhrase pobjectreferencephraseNode2 = (PObjectReferencePhrase)nodeArrayList1[0];
        AObjectReferencePhraseUsagePhrase pusagephraseNode1 = new AObjectReferencePhraseUsagePhrase (
              pobjectreferencephraseNode2
        );
        nodeList.Add(pusagephraseNode1);
        return nodeList;
    }
    ArrayList New99()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TPackedDecimal tpackeddecimalNode2 = (TPackedDecimal)nodeArrayList1[0];
        APackedDecimalUsagePhrase pusagephraseNode1 = new APackedDecimalUsagePhrase (
              tpackeddecimalNode2
        );
        nodeList.Add(pusagephraseNode1);
        return nodeList;
    }
    ArrayList New100()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TPointer tpointerNode2 = (TPointer)nodeArrayList1[0];
        APointerUsagePhrase pusagephraseNode1 = new APointerUsagePhrase (
              tpointerNode2
        );
        nodeList.Add(pusagephraseNode1);
        return nodeList;
    }
    ArrayList New101()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TProcedurePointer tprocedurepointerNode2 = (TProcedurePointer)nodeArrayList1[0];
        AProcedurePointerUsagePhrase pusagephraseNode1 = new AProcedurePointerUsagePhrase (
              tprocedurepointerNode2
        );
        nodeList.Add(pusagephraseNode1);
        return nodeList;
    }
    ArrayList New102()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TFunctionPointer tfunctionpointerNode2 = (TFunctionPointer)nodeArrayList1[0];
        AFunctionPointerUsagePhrase pusagephraseNode1 = new AFunctionPointerUsagePhrase (
              tfunctionpointerNode2
        );
        nodeList.Add(pusagephraseNode1);
        return nodeList;
    }
    ArrayList New103()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TObject tobjectNode2 = (TObject)nodeArrayList1[0];
        TReference treferenceNode3 = (TReference)nodeArrayList2[0];
        AObjectReferencePhrase pobjectreferencephraseNode1 = new AObjectReferencePhrase (
              tobjectNode2,
              treferenceNode3,
              null
        );
        nodeList.Add(pobjectreferencephraseNode1);
        return nodeList;
    }
    ArrayList New104()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList3 = (ArrayList) Pop();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TObject tobjectNode2 = (TObject)nodeArrayList1[0];
        TReference treferenceNode3 = (TReference)nodeArrayList2[0];
        TDataName tdatanameNode4 = (TDataName)nodeArrayList3[0];
        AObjectReferencePhrase pobjectreferencephraseNode1 = new AObjectReferencePhrase (
              tobjectNode2,
              treferenceNode3,
              tdatanameNode4
        );
        nodeList.Add(pobjectreferencephraseNode1);
        return nodeList;
    }
    ArrayList New105()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList4 = (ArrayList) Pop();
        ArrayList nodeArrayList3 = (ArrayList) Pop();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TNumberNot88 tnumbernot88Node2 = (TNumberNot88)nodeArrayList1[0];
        TDataName tdatanameNode3 = (TDataName)nodeArrayList2[0];
        TRenames trenamesNode4 = (TRenames)nodeArrayList3[0];
        TDataName tdatanameNode5 = (TDataName)nodeArrayList4[0];
        ARenamesItem prenamesitemNode1 = new ARenamesItem (
              tnumbernot88Node2,
              tdatanameNode3,
              trenamesNode4,
              tdatanameNode5,
              null
        );
        nodeList.Add(prenamesitemNode1);
        return nodeList;
    }
    ArrayList New106()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList5 = (ArrayList) Pop();
        ArrayList nodeArrayList4 = (ArrayList) Pop();
        ArrayList nodeArrayList3 = (ArrayList) Pop();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TNumberNot88 tnumbernot88Node2 = (TNumberNot88)nodeArrayList1[0];
        TDataName tdatanameNode3 = (TDataName)nodeArrayList2[0];
        TRenames trenamesNode4 = (TRenames)nodeArrayList3[0];
        TDataName tdatanameNode5 = (TDataName)nodeArrayList4[0];
        PThroughPhrase pthroughphraseNode6 = (PThroughPhrase)nodeArrayList5[0];
        ARenamesItem prenamesitemNode1 = new ARenamesItem (
              tnumbernot88Node2,
              tdatanameNode3,
              trenamesNode4,
              tdatanameNode5,
              pthroughphraseNode6
        );
        nodeList.Add(prenamesitemNode1);
        return nodeList;
    }
    ArrayList New107()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TThrough tthroughNode2 = (TThrough)nodeArrayList1[0];
        TDataName tdatanameNode3 = (TDataName)nodeArrayList2[0];
        AThroughPhrase pthroughphraseNode1 = new AThroughPhrase (
              tthroughNode2,
              tdatanameNode3
        );
        nodeList.Add(pthroughphraseNode1);
        return nodeList;
    }
    ArrayList New108()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TValue tvalueNode2 = (TValue)nodeArrayList1[0];
        PLiteral pliteralNode5 = (PLiteral)nodeArrayList2[0];
        AValueClause pvalueclauseNode1 = new AValueClause (
              tvalueNode2,
              null,
              null,
              pliteralNode5
        );
        nodeList.Add(pvalueclauseNode1);
        return nodeList;
    }
    ArrayList New109()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList3 = (ArrayList) Pop();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TValue tvalueNode2 = (TValue)nodeArrayList1[0];
        TIs tisNode3 = (TIs)nodeArrayList2[0];
        PLiteral pliteralNode5 = (PLiteral)nodeArrayList3[0];
        AValueClause pvalueclauseNode1 = new AValueClause (
              tvalueNode2,
              tisNode3,
              null,
              pliteralNode5
        );
        nodeList.Add(pvalueclauseNode1);
        return nodeList;
    }
    ArrayList New110()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList3 = (ArrayList) Pop();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TValue tvalueNode2 = (TValue)nodeArrayList1[0];
        TAll tallNode4 = (TAll)nodeArrayList2[0];
        PLiteral pliteralNode5 = (PLiteral)nodeArrayList3[0];
        AValueClause pvalueclauseNode1 = new AValueClause (
              tvalueNode2,
              null,
              tallNode4,
              pliteralNode5
        );
        nodeList.Add(pvalueclauseNode1);
        return nodeList;
    }
    ArrayList New111()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList4 = (ArrayList) Pop();
        ArrayList nodeArrayList3 = (ArrayList) Pop();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TValue tvalueNode2 = (TValue)nodeArrayList1[0];
        TIs tisNode3 = (TIs)nodeArrayList2[0];
        TAll tallNode4 = (TAll)nodeArrayList3[0];
        PLiteral pliteralNode5 = (PLiteral)nodeArrayList4[0];
        AValueClause pvalueclauseNode1 = new AValueClause (
              tvalueNode2,
              tisNode3,
              tallNode4,
              pliteralNode5
        );
        nodeList.Add(pvalueclauseNode1);
        return nodeList;
    }
    ArrayList New112()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList4 = (ArrayList) Pop();
        ArrayList nodeArrayList3 = (ArrayList) Pop();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TNumber88 tnumber88Node2 = (TNumber88)nodeArrayList1[0];
        TDataName tdatanameNode3 = (TDataName)nodeArrayList2[0];
        PValueOrValues pvalueorvaluesNode4 = (PValueOrValues)nodeArrayList3[0];
        PLiteralSequence pliteralsequenceNode5 = (PLiteralSequence)nodeArrayList4[0];
        AValueItem pvalueitemNode1 = new AValueItem (
              tnumber88Node2,
              tdatanameNode3,
              pvalueorvaluesNode4,
              pliteralsequenceNode5
        );
        nodeList.Add(pvalueitemNode1);
        return nodeList;
    }
    ArrayList New113()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TValue tvalueNode2 = (TValue)nodeArrayList1[0];
        AValueValueOrValues pvalueorvaluesNode1 = new AValueValueOrValues (
              tvalueNode2,
              null
        );
        nodeList.Add(pvalueorvaluesNode1);
        return nodeList;
    }
    ArrayList New114()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TValue tvalueNode2 = (TValue)nodeArrayList1[0];
        TIs tisNode3 = (TIs)nodeArrayList2[0];
        AValueValueOrValues pvalueorvaluesNode1 = new AValueValueOrValues (
              tvalueNode2,
              tisNode3
        );
        nodeList.Add(pvalueorvaluesNode1);
        return nodeList;
    }
    ArrayList New115()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TValues tvaluesNode2 = (TValues)nodeArrayList1[0];
        AValuesValueOrValues pvalueorvaluesNode1 = new AValuesValueOrValues (
              tvaluesNode2,
              null
        );
        nodeList.Add(pvalueorvaluesNode1);
        return nodeList;
    }
    ArrayList New116()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TValues tvaluesNode2 = (TValues)nodeArrayList1[0];
        TAre tareNode3 = (TAre)nodeArrayList2[0];
        AValuesValueOrValues pvalueorvaluesNode1 = new AValuesValueOrValues (
              tvaluesNode2,
              tareNode3
        );
        nodeList.Add(pvalueorvaluesNode1);
        return nodeList;
    }
    ArrayList New117()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        PLiteral pliteralNode3 = (PLiteral)nodeArrayList1[0];
        ASingleLiteralSequence pliteralsequenceNode1 = new ASingleLiteralSequence (
              null,
              pliteralNode3
        );
        nodeList.Add(pliteralsequenceNode1);
        return nodeList;
    }
    ArrayList New118()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TAll tallNode2 = (TAll)nodeArrayList1[0];
        PLiteral pliteralNode3 = (PLiteral)nodeArrayList2[0];
        ASingleLiteralSequence pliteralsequenceNode1 = new ASingleLiteralSequence (
              tallNode2,
              pliteralNode3
        );
        nodeList.Add(pliteralsequenceNode1);
        return nodeList;
    }
    ArrayList New119()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        PLiteralSequence pliteralsequenceNode2 = (PLiteralSequence)nodeArrayList1[0];
        PLiteral pliteralNode4 = (PLiteral)nodeArrayList2[0];
        ASequenceLiteralSequence pliteralsequenceNode1 = new ASequenceLiteralSequence (
              pliteralsequenceNode2,
              null,
              pliteralNode4
        );
        nodeList.Add(pliteralsequenceNode1);
        return nodeList;
    }
    ArrayList New120()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList3 = (ArrayList) Pop();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        PLiteralSequence pliteralsequenceNode2 = (PLiteralSequence)nodeArrayList1[0];
        TComma tcommaNode3 = (TComma)nodeArrayList2[0];
        PLiteral pliteralNode4 = (PLiteral)nodeArrayList3[0];
        ASequenceLiteralSequence pliteralsequenceNode1 = new ASequenceLiteralSequence (
              pliteralsequenceNode2,
              tcommaNode3,
              pliteralNode4
        );
        nodeList.Add(pliteralsequenceNode1);
        return nodeList;
    }
    ArrayList New121()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList3 = (ArrayList) Pop();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        PLiteral pliteralNode2 = (PLiteral)nodeArrayList1[0];
        TThrough tthroughNode3 = (TThrough)nodeArrayList2[0];
        PLiteral pliteralNode4 = (PLiteral)nodeArrayList3[0];
        AThroughSingleLiteralSequence pliteralsequenceNode1 = new AThroughSingleLiteralSequence (
              pliteralNode2,
              tthroughNode3,
              pliteralNode4
        );
        nodeList.Add(pliteralsequenceNode1);
        return nodeList;
    }
    ArrayList New122()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList4 = (ArrayList) Pop();
        ArrayList nodeArrayList3 = (ArrayList) Pop();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        PLiteralSequence pliteralsequenceNode2 = (PLiteralSequence)nodeArrayList1[0];
        PLiteral pliteralNode4 = (PLiteral)nodeArrayList2[0];
        TThrough tthroughNode5 = (TThrough)nodeArrayList3[0];
        PLiteral pliteralNode6 = (PLiteral)nodeArrayList4[0];
        AThroughSequenceLiteralSequence pliteralsequenceNode1 = new AThroughSequenceLiteralSequence (
              pliteralsequenceNode2,
              null,
              pliteralNode4,
              tthroughNode5,
              pliteralNode6
        );
        nodeList.Add(pliteralsequenceNode1);
        return nodeList;
    }
    ArrayList New123()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList5 = (ArrayList) Pop();
        ArrayList nodeArrayList4 = (ArrayList) Pop();
        ArrayList nodeArrayList3 = (ArrayList) Pop();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        PLiteralSequence pliteralsequenceNode2 = (PLiteralSequence)nodeArrayList1[0];
        TComma tcommaNode3 = (TComma)nodeArrayList2[0];
        PLiteral pliteralNode4 = (PLiteral)nodeArrayList3[0];
        TThrough tthroughNode5 = (TThrough)nodeArrayList4[0];
        PLiteral pliteralNode6 = (PLiteral)nodeArrayList5[0];
        AThroughSequenceLiteralSequence pliteralsequenceNode1 = new AThroughSequenceLiteralSequence (
              pliteralsequenceNode2,
              tcommaNode3,
              pliteralNode4,
              tthroughNode5,
              pliteralNode6
        );
        nodeList.Add(pliteralsequenceNode1);
        return nodeList;
    }
    ArrayList New124()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TZeros tzerosNode2 = (TZeros)nodeArrayList1[0];
        AZerosLiteral pliteralNode1 = new AZerosLiteral (
              tzerosNode2
        );
        nodeList.Add(pliteralNode1);
        return nodeList;
    }
    ArrayList New125()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TSpaces tspacesNode2 = (TSpaces)nodeArrayList1[0];
        ASpacesLiteral pliteralNode1 = new ASpacesLiteral (
              tspacesNode2
        );
        nodeList.Add(pliteralNode1);
        return nodeList;
    }
    ArrayList New126()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        THighValues thighvaluesNode2 = (THighValues)nodeArrayList1[0];
        AHighValuesLiteral pliteralNode1 = new AHighValuesLiteral (
              thighvaluesNode2
        );
        nodeList.Add(pliteralNode1);
        return nodeList;
    }
    ArrayList New127()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TLowValues tlowvaluesNode2 = (TLowValues)nodeArrayList1[0];
        ALowValuesLiteral pliteralNode1 = new ALowValuesLiteral (
              tlowvaluesNode2
        );
        nodeList.Add(pliteralNode1);
        return nodeList;
    }
    ArrayList New128()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TQuotes tquotesNode2 = (TQuotes)nodeArrayList1[0];
        AQuotesLiteral pliteralNode1 = new AQuotesLiteral (
              tquotesNode2
        );
        nodeList.Add(pliteralNode1);
        return nodeList;
    }
    ArrayList New129()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TNulls tnullsNode2 = (TNulls)nodeArrayList1[0];
        ANullsLiteral pliteralNode1 = new ANullsLiteral (
              tnullsNode2
        );
        nodeList.Add(pliteralNode1);
        return nodeList;
    }
    ArrayList New130()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        PNumber pnumberNode2 = (PNumber)nodeArrayList1[0];
        ANumberLiteral pliteralNode1 = new ANumberLiteral (
              pnumberNode2
        );
        nodeList.Add(pliteralNode1);
        return nodeList;
    }
    ArrayList New131()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TNumericLiteral tnumericliteralNode2 = (TNumericLiteral)nodeArrayList1[0];
        ANumericLiteralLiteral pliteralNode1 = new ANumericLiteralLiteral (
              tnumericliteralNode2
        );
        nodeList.Add(pliteralNode1);
        return nodeList;
    }
    ArrayList New132()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TAlphanumericLiteral talphanumericliteralNode2 = (TAlphanumericLiteral)nodeArrayList1[0];
        AAlphanumericLiteralLiteral pliteralNode1 = new AAlphanumericLiteralLiteral (
              talphanumericliteralNode2
        );
        nodeList.Add(pliteralNode1);
        return nodeList;
    }
    ArrayList New133()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        PCharacterSubstring pcharactersubstringNode2 = (PCharacterSubstring)nodeArrayList1[0];
        ASingleCharacterString pcharacterstringNode1 = new ASingleCharacterString (
              pcharactersubstringNode2
        );
        nodeList.Add(pcharacterstringNode1);
        return nodeList;
    }
    ArrayList New134()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        PCharacterString pcharacterstringNode2 = (PCharacterString)nodeArrayList1[0];
        PCharacterSubstring pcharactersubstringNode3 = (PCharacterSubstring)nodeArrayList2[0];
        ASequenceCharacterString pcharacterstringNode1 = new ASequenceCharacterString (
              pcharacterstringNode2,
              pcharactersubstringNode3
        );
        nodeList.Add(pcharacterstringNode1);
        return nodeList;
    }
    ArrayList New135()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TDataName tdatanameNode2 = (TDataName)nodeArrayList1[0];
        ADataNameCharacterSubstring pcharactersubstringNode1 = new ADataNameCharacterSubstring (
              tdatanameNode2
        );
        nodeList.Add(pcharactersubstringNode1);
        return nodeList;
    }
    ArrayList New136()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TPlus tplusNode2 = (TPlus)nodeArrayList1[0];
        APlusCharacterSubstring pcharactersubstringNode1 = new APlusCharacterSubstring (
              tplusNode2
        );
        nodeList.Add(pcharactersubstringNode1);
        return nodeList;
    }
    ArrayList New137()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TMinus tminusNode2 = (TMinus)nodeArrayList1[0];
        AMinusCharacterSubstring pcharactersubstringNode1 = new AMinusCharacterSubstring (
              tminusNode2
        );
        nodeList.Add(pcharactersubstringNode1);
        return nodeList;
    }
    ArrayList New138()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TStar tstarNode2 = (TStar)nodeArrayList1[0];
        AStarCharacterSubstring pcharactersubstringNode1 = new AStarCharacterSubstring (
              tstarNode2
        );
        nodeList.Add(pcharactersubstringNode1);
        return nodeList;
    }
    ArrayList New139()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TSlash tslashNode2 = (TSlash)nodeArrayList1[0];
        ASlashCharacterSubstring pcharactersubstringNode1 = new ASlashCharacterSubstring (
              tslashNode2
        );
        nodeList.Add(pcharactersubstringNode1);
        return nodeList;
    }
    ArrayList New140()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TDollar tdollarNode2 = (TDollar)nodeArrayList1[0];
        ADollarCharacterSubstring pcharactersubstringNode1 = new ADollarCharacterSubstring (
              tdollarNode2
        );
        nodeList.Add(pcharactersubstringNode1);
        return nodeList;
    }
    ArrayList New141()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TComma tcommaNode2 = (TComma)nodeArrayList1[0];
        ACommaCharacterSubstring pcharactersubstringNode1 = new ACommaCharacterSubstring (
              tcommaNode2
        );
        nodeList.Add(pcharactersubstringNode1);
        return nodeList;
    }
    ArrayList New142()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TNumberNot88 tnumbernot88Node2 = (TNumberNot88)nodeArrayList1[0];
        ANumberCharacterSubstring pcharactersubstringNode1 = new ANumberCharacterSubstring (
              tnumbernot88Node2
        );
        nodeList.Add(pcharactersubstringNode1);
        return nodeList;
    }
    ArrayList New143()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TNumericLiteral tnumericliteralNode2 = (TNumericLiteral)nodeArrayList1[0];
        ANumericLiteralCharacterSubstring pcharactersubstringNode1 = new ANumericLiteralCharacterSubstring (
              tnumericliteralNode2
        );
        nodeList.Add(pcharactersubstringNode1);
        return nodeList;
    }
    ArrayList New144()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        PBracketedNumber pbracketednumberNode2 = (PBracketedNumber)nodeArrayList1[0];
        ABracketedNumberCharacterSubstring pcharactersubstringNode1 = new ABracketedNumberCharacterSubstring (
              pbracketednumberNode2
        );
        nodeList.Add(pcharactersubstringNode1);
        return nodeList;
    }
    ArrayList New145()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TDotZee tdotzeeNode2 = (TDotZee)nodeArrayList1[0];
        ADotZeeCharacterSubstring pcharactersubstringNode1 = new ADotZeeCharacterSubstring (
              tdotzeeNode2
        );
        nodeList.Add(pcharactersubstringNode1);
        return nodeList;
    }
    ArrayList New146()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList3 = (ArrayList) Pop();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TLparen tlparenNode2 = (TLparen)nodeArrayList1[0];
        PNumber pnumberNode3 = (PNumber)nodeArrayList2[0];
        TRparen trparenNode4 = (TRparen)nodeArrayList3[0];
        ABracketedNumber pbracketednumberNode1 = new ABracketedNumber (
              tlparenNode2,
              pnumberNode3,
              trparenNode4
        );
        nodeList.Add(pbracketednumberNode1);
        return nodeList;
    }
    ArrayList New147()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TNumberNot88 tnumbernot88Node2 = (TNumberNot88)nodeArrayList1[0];
        ANumberNot88Number pnumberNode1 = new ANumberNot88Number (
              tnumbernot88Node2
        );
        nodeList.Add(pnumberNode1);
        return nodeList;
    }
    ArrayList New148()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TNumber88 tnumber88Node2 = (TNumber88)nodeArrayList1[0];
        ANumber88Number pnumberNode1 = new ANumber88Number (
              tnumber88Node2
        );
        nodeList.Add(pnumberNode1);
        return nodeList;
    }
    ArrayList New149()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TypedList listNode2 = new TypedList();
        PAscendingOrDescendingKeyPhrase pascendingordescendingkeyphraseNode1 = (PAscendingOrDescendingKeyPhrase)nodeArrayList1[0];
        if ( pascendingordescendingkeyphraseNode1 != null )
        {
            listNode2.Add(pascendingordescendingkeyphraseNode1);
        }
        nodeList.Add(listNode2);
        return nodeList;
    }
    ArrayList New150()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TypedList listNode3 = new TypedList();
        TypedList listNode1 = (TypedList)nodeArrayList1[0];
        PAscendingOrDescendingKeyPhrase pascendingordescendingkeyphraseNode2 = (PAscendingOrDescendingKeyPhrase)nodeArrayList2[0];
        if ( listNode1 != null )
        {
            listNode3.AddAll(listNode1);
        }
        if ( pascendingordescendingkeyphraseNode2 != null )
        {
            listNode3.Add(pascendingordescendingkeyphraseNode2);
        }
        nodeList.Add(listNode3);
        return nodeList;
    }
    ArrayList New151()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TypedList listNode2 = new TypedList();
        PIndexedByPhrase pindexedbyphraseNode1 = (PIndexedByPhrase)nodeArrayList1[0];
        if ( pindexedbyphraseNode1 != null )
        {
            listNode2.Add(pindexedbyphraseNode1);
        }
        nodeList.Add(listNode2);
        return nodeList;
    }
    ArrayList New152()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TypedList listNode3 = new TypedList();
        TypedList listNode1 = (TypedList)nodeArrayList1[0];
        PIndexedByPhrase pindexedbyphraseNode2 = (PIndexedByPhrase)nodeArrayList2[0];
        if ( listNode1 != null )
        {
            listNode3.AddAll(listNode1);
        }
        if ( pindexedbyphraseNode2 != null )
        {
            listNode3.Add(pindexedbyphraseNode2);
        }
        nodeList.Add(listNode3);
        return nodeList;
    }
    ArrayList New153()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TypedList listNode2 = new TypedList();
        TDataName tdatanameNode1 = (TDataName)nodeArrayList1[0];
        if ( tdatanameNode1 != null )
        {
            listNode2.Add(tdatanameNode1);
        }
        nodeList.Add(listNode2);
        return nodeList;
    }
    ArrayList New154()
    {
        ArrayList nodeList = new ArrayList();
        ArrayList nodeArrayList2 = (ArrayList) Pop();
        ArrayList nodeArrayList1 = (ArrayList) Pop();
        TypedList listNode3 = new TypedList();
        TypedList listNode1 = (TypedList)nodeArrayList1[0];
        TDataName tdatanameNode2 = (TDataName)nodeArrayList2[0];
        if ( listNode1 != null )
        {
            listNode3.AddAll(listNode1);
        }
        if ( tdatanameNode2 != null )
        {
            listNode3.Add(tdatanameNode2);
        }
        nodeList.Add(listNode3);
        return nodeList;
    }

    private static int[][][] actionTable = {
      new int[][] {
        new int[] {-1, 3, 0},
        new int[] {9, 0, 1},
        new int[] {10, 0, 2},
      },
      new int[][] {
        new int[] {-1, 3, 1},
        new int[] {74, 0, 9},
      },
      new int[][] {
        new int[] {-1, 1, 6},
        new int[] {17, 0, 10},
        new int[] {18, 0, 11},
        new int[] {21, 0, 12},
        new int[] {22, 0, 13},
        new int[] {23, 0, 14},
        new int[] {24, 0, 15},
        new int[] {25, 0, 16},
        new int[] {26, 0, 17},
        new int[] {27, 0, 18},
        new int[] {30, 0, 19},
        new int[] {31, 0, 20},
        new int[] {32, 0, 21},
        new int[] {33, 0, 22},
        new int[] {35, 0, 23},
        new int[] {36, 0, 24},
        new int[] {38, 0, 25},
        new int[] {41, 0, 26},
        new int[] {43, 0, 27},
        new int[] {46, 0, 28},
        new int[] {49, 0, 29},
        new int[] {50, 0, 30},
        new int[] {52, 0, 31},
        new int[] {53, 0, 32},
        new int[] {54, 0, 33},
        new int[] {55, 0, 34},
        new int[] {57, 0, 35},
        new int[] {62, 0, 36},
        new int[] {64, 0, 37},
        new int[] {68, 0, 38},
        new int[] {69, 0, 39},
        new int[] {70, 0, 40},
        new int[] {74, 0, 41},
      },
      new int[][] {
        new int[] {-1, 3, 3},
        new int[] {75, 2, -1},
      },
      new int[][] {
        new int[] {-1, 3, 4},
        new int[] {0, 0, 63},
      },
      new int[][] {
        new int[] {-1, 1, 1},
      },
      new int[][] {
        new int[] {-1, 1, 3},
      },
      new int[][] {
        new int[] {-1, 1, 4},
      },
      new int[][] {
        new int[] {-1, 1, 5},
      },
      new int[][] {
        new int[] {-1, 3, 9},
        new int[] {70, 0, 64},
        new int[] {71, 0, 65},
      },
      new int[][] {
        new int[] {-1, 1, 81},
        new int[] {47, 0, 67},
      },
      new int[][] {
        new int[] {-1, 3, 11},
        new int[] {72, 0, 68},
        new int[] {73, 0, 69},
      },
      new int[][] {
        new int[] {-1, 1, 83},
      },
      new int[][] {
        new int[] {-1, 1, 84},
        new int[] {47, 0, 70},
      },
      new int[][] {
        new int[] {-1, 1, 86},
        new int[] {47, 0, 71},
      },
      new int[][] {
        new int[] {-1, 1, 88},
      },
      new int[][] {
        new int[] {-1, 1, 89},
        new int[] {47, 0, 72},
      },
      new int[][] {
        new int[] {-1, 1, 91},
      },
      new int[][] {
        new int[] {-1, 3, 18},
        new int[] {34, 0, 73},
      },
      new int[][] {
        new int[] {-1, 1, 92},
        new int[] {47, 0, 74},
      },
      new int[][] {
        new int[] {-1, 1, 94},
        new int[] {47, 0, 75},
      },
      new int[][] {
        new int[] {-1, 1, 34},
      },
      new int[][] {
        new int[] {-1, 1, 15},
      },
      new int[][] {
        new int[] {-1, 1, 102},
      },
      new int[][] {
        new int[] {-1, 1, 35},
      },
      new int[][] {
        new int[] {-1, 1, 96},
      },
      new int[][] {
        new int[] {-1, 1, 36},
        new int[] {60, 0, 76},
      },
      new int[][] {
        new int[] {-1, 1, 69},
      },
      new int[][] {
        new int[] {-1, 1, 97},
      },
      new int[][] {
        new int[] {-1, 3, 29},
        new int[] {58, 0, 77},
      },
      new int[][] {
        new int[] {-1, 3, 30},
        new int[] {9, 0, 78},
        new int[] {10, 0, 79},
      },
      new int[][] {
        new int[] {-1, 1, 99},
      },
      new int[][] {
        new int[] {-1, 3, 32},
        new int[] {1, 0, 82},
        new int[] {2, 0, 83},
        new int[] {3, 0, 84},
        new int[] {4, 0, 85},
        new int[] {5, 0, 86},
        new int[] {6, 0, 87},
        new int[] {7, 0, 88},
        new int[] {10, 0, 89},
        new int[] {12, 0, 90},
        new int[] {13, 0, 91},
        new int[] {40, 0, 92},
        new int[] {74, 0, 93},
      },
      new int[][] {
        new int[] {-1, 1, 100},
      },
      new int[][] {
        new int[] {-1, 1, 101},
      },
      new int[][] {
        new int[] {-1, 3, 35},
        new int[] {74, 0, 97},
      },
      new int[][] {
        new int[] {-1, 1, 67},
        new int[] {40, 0, 98},
      },
      new int[][] {
        new int[] {-1, 1, 73},
        new int[] {44, 0, 99},
        new int[] {60, 0, 100},
      },
      new int[][] {
        new int[] {-1, 1, 70},
      },
      new int[][] {
        new int[] {-1, 1, 79},
        new int[] {40, 0, 102},
      },
      new int[][] {
        new int[] {-1, 3, 40},
        new int[] {9, 0, 78},
        new int[] {10, 0, 79},
        new int[] {11, 0, 103},
        new int[] {12, 0, 104},
        new int[] {14, 0, 105},
        new int[] {37, 0, 106},
        new int[] {40, 0, 107},
        new int[] {45, 0, 108},
        new int[] {48, 0, 109},
        new int[] {56, 0, 110},
        new int[] {63, 0, 111},
        new int[] {73, 0, 112},
      },
      new int[][] {
        new int[] {-1, 1, 14},
        new int[] {59, 0, 115},
      },
      new int[][] {
        new int[] {-1, 1, 7},
        new int[] {17, 0, 10},
        new int[] {18, 0, 11},
        new int[] {21, 0, 12},
        new int[] {22, 0, 13},
        new int[] {23, 0, 14},
        new int[] {24, 0, 15},
        new int[] {25, 0, 16},
        new int[] {26, 0, 17},
        new int[] {27, 0, 18},
        new int[] {30, 0, 19},
        new int[] {31, 0, 20},
        new int[] {32, 0, 21},
        new int[] {35, 0, 23},
        new int[] {36, 0, 24},
        new int[] {38, 0, 25},
        new int[] {41, 0, 26},
        new int[] {43, 0, 27},
        new int[] {46, 0, 28},
        new int[] {49, 0, 29},
        new int[] {50, 0, 30},
        new int[] {52, 0, 31},
        new int[] {53, 0, 32},
        new int[] {54, 0, 33},
        new int[] {55, 0, 34},
        new int[] {57, 0, 35},
        new int[] {62, 0, 36},
        new int[] {64, 0, 37},
        new int[] {68, 0, 38},
        new int[] {69, 0, 39},
        new int[] {70, 0, 40},
      },
      new int[][] {
        new int[] {-1, 1, 8},
        new int[] {17, 0, 10},
        new int[] {18, 0, 11},
        new int[] {21, 0, 12},
        new int[] {22, 0, 13},
        new int[] {23, 0, 14},
        new int[] {24, 0, 15},
        new int[] {25, 0, 16},
        new int[] {26, 0, 17},
        new int[] {27, 0, 18},
        new int[] {30, 0, 19},
        new int[] {31, 0, 20},
        new int[] {32, 0, 21},
        new int[] {35, 0, 23},
        new int[] {36, 0, 24},
        new int[] {38, 0, 25},
        new int[] {41, 0, 26},
        new int[] {43, 0, 27},
        new int[] {46, 0, 28},
        new int[] {49, 0, 29},
        new int[] {50, 0, 30},
        new int[] {52, 0, 31},
        new int[] {53, 0, 32},
        new int[] {54, 0, 33},
        new int[] {55, 0, 34},
        new int[] {62, 0, 36},
        new int[] {64, 0, 37},
        new int[] {68, 0, 38},
        new int[] {69, 0, 39},
        new int[] {70, 0, 40},
      },
      new int[][] {
        new int[] {-1, 1, 10},
        new int[] {17, 0, 10},
        new int[] {18, 0, 11},
        new int[] {21, 0, 12},
        new int[] {22, 0, 13},
        new int[] {23, 0, 14},
        new int[] {24, 0, 15},
        new int[] {25, 0, 16},
        new int[] {26, 0, 17},
        new int[] {27, 0, 18},
        new int[] {30, 0, 19},
        new int[] {31, 0, 20},
        new int[] {32, 0, 21},
        new int[] {35, 0, 23},
        new int[] {36, 0, 24},
        new int[] {38, 0, 25},
        new int[] {41, 0, 26},
        new int[] {43, 0, 27},
        new int[] {46, 0, 28},
        new int[] {49, 0, 29},
        new int[] {50, 0, 30},
        new int[] {52, 0, 31},
        new int[] {53, 0, 32},
        new int[] {54, 0, 33},
        new int[] {55, 0, 34},
        new int[] {62, 0, 36},
        new int[] {64, 0, 37},
        new int[] {68, 0, 38},
        new int[] {69, 0, 39},
        new int[] {70, 0, 40},
      },
      new int[][] {
        new int[] {-1, 1, 17},
      },
      new int[][] {
        new int[] {-1, 1, 19},
      },
      new int[][] {
        new int[] {-1, 1, 20},
      },
      new int[][] {
        new int[] {-1, 1, 21},
      },
      new int[][] {
        new int[] {-1, 1, 22},
      },
      new int[][] {
        new int[] {-1, 1, 23},
      },
      new int[][] {
        new int[] {-1, 1, 24},
      },
      new int[][] {
        new int[] {-1, 1, 38},
        new int[] {16, 0, 120},
        new int[] {29, 0, 121},
        new int[] {39, 0, 122},
      },
      new int[][] {
        new int[] {-1, 1, 25},
      },
      new int[][] {
        new int[] {-1, 1, 26},
      },
      new int[][] {
        new int[] {-1, 3, 55},
        new int[] {43, 0, 27},
        new int[] {68, 0, 38},
      },
      new int[][] {
        new int[] {-1, 1, 63},
        new int[] {61, 0, 129},
      },
      new int[][] {
        new int[] {-1, 1, 27},
      },
      new int[][] {
        new int[] {-1, 1, 28},
      },
      new int[][] {
        new int[] {-1, 3, 59},
        new int[] {17, 0, 10},
        new int[] {21, 0, 12},
        new int[] {22, 0, 13},
        new int[] {23, 0, 14},
        new int[] {24, 0, 15},
        new int[] {25, 0, 16},
        new int[] {26, 0, 17},
        new int[] {30, 0, 19},
        new int[] {31, 0, 20},
        new int[] {35, 0, 23},
        new int[] {38, 0, 25},
        new int[] {46, 0, 28},
        new int[] {49, 0, 29},
        new int[] {52, 0, 31},
        new int[] {54, 0, 33},
        new int[] {55, 0, 34},
      },
      new int[][] {
        new int[] {-1, 1, 77},
      },
      new int[][] {
        new int[] {-1, 1, 98},
      },
      new int[][] {
        new int[] {-1, 1, 29},
      },
      new int[][] {
        new int[] {-1, 1, 0},
        new int[] {9, 0, 1},
        new int[] {10, 0, 2},
      },
      new int[][] {
        new int[] {-1, 1, 113},
        new int[] {40, 0, 133},
      },
      new int[][] {
        new int[] {-1, 1, 115},
        new int[] {15, 0, 134},
      },
      new int[][] {
        new int[] {-1, 3, 66},
        new int[] {9, 0, 78},
        new int[] {10, 0, 79},
        new int[] {11, 0, 103},
        new int[] {12, 0, 104},
        new int[] {14, 0, 135},
        new int[] {37, 0, 106},
        new int[] {45, 0, 108},
        new int[] {48, 0, 109},
        new int[] {56, 0, 110},
        new int[] {63, 0, 111},
        new int[] {73, 0, 112},
      },
      new int[][] {
        new int[] {-1, 1, 82},
      },
      new int[][] {
        new int[] {-1, 3, 68},
        new int[] {73, 0, 138},
      },
      new int[][] {
        new int[] {-1, 1, 30},
      },
      new int[][] {
        new int[] {-1, 1, 85},
      },
      new int[][] {
        new int[] {-1, 1, 87},
      },
      new int[][] {
        new int[] {-1, 1, 90},
      },
      new int[][] {
        new int[] {-1, 3, 73},
        new int[] {40, 0, 139},
        new int[] {74, 0, 140},
      },
      new int[][] {
        new int[] {-1, 1, 93},
      },
      new int[][] {
        new int[] {-1, 1, 95},
      },
      new int[][] {
        new int[] {-1, 1, 37},
      },
      new int[][] {
        new int[] {-1, 1, 103},
        new int[] {74, 0, 141},
      },
      new int[][] {
        new int[] {-1, 1, 148},
      },
      new int[][] {
        new int[] {-1, 1, 147},
      },
      new int[][] {
        new int[] {-1, 3, 80},
        new int[] {9, 0, 78},
        new int[] {10, 0, 79},
      },
      new int[][] {
        new int[] {-1, 1, 42},
        new int[] {28, 0, 143},
        new int[] {66, 0, 144},
        new int[] {67, 0, 145},
      },
      new int[][] {
        new int[] {-1, 1, 141},
      },
      new int[][] {
        new int[] {-1, 1, 139},
      },
      new int[][] {
        new int[] {-1, 1, 136},
      },
      new int[][] {
        new int[] {-1, 1, 137},
      },
      new int[][] {
        new int[] {-1, 1, 138},
      },
      new int[][] {
        new int[] {-1, 1, 140},
      },
      new int[][] {
        new int[] {-1, 3, 88},
        new int[] {9, 0, 78},
        new int[] {10, 0, 79},
      },
      new int[][] {
        new int[] {-1, 1, 142},
      },
      new int[][] {
        new int[] {-1, 1, 143},
      },
      new int[][] {
        new int[] {-1, 1, 145},
      },
      new int[][] {
        new int[] {-1, 3, 92},
        new int[] {1, 0, 82},
        new int[] {2, 0, 83},
        new int[] {3, 0, 84},
        new int[] {4, 0, 85},
        new int[] {5, 0, 86},
        new int[] {6, 0, 87},
        new int[] {7, 0, 88},
        new int[] {10, 0, 89},
        new int[] {12, 0, 90},
        new int[] {13, 0, 91},
        new int[] {74, 0, 93},
      },
      new int[][] {
        new int[] {-1, 1, 135},
      },
      new int[][] {
        new int[] {-1, 1, 61},
        new int[] {1, 0, 82},
        new int[] {2, 0, 83},
        new int[] {3, 0, 84},
        new int[] {4, 0, 85},
        new int[] {5, 0, 86},
        new int[] {6, 0, 87},
        new int[] {7, 0, 88},
        new int[] {10, 0, 89},
        new int[] {12, 0, 90},
        new int[] {13, 0, 91},
        new int[] {74, 0, 93},
      },
      new int[][] {
        new int[] {-1, 1, 133},
      },
      new int[][] {
        new int[] {-1, 1, 144},
      },
      new int[][] {
        new int[] {-1, 1, 16},
      },
      new int[][] {
        new int[] {-1, 1, 68},
      },
      new int[][] {
        new int[] {-1, 1, 75},
      },
      new int[][] {
        new int[] {-1, 1, 76},
      },
      new int[][] {
        new int[] {-1, 1, 74},
      },
      new int[][] {
        new int[] {-1, 1, 80},
      },
      new int[][] {
        new int[] {-1, 1, 132},
      },
      new int[][] {
        new int[] {-1, 1, 131},
      },
      new int[][] {
        new int[] {-1, 3, 105},
        new int[] {9, 0, 78},
        new int[] {10, 0, 79},
        new int[] {11, 0, 103},
        new int[] {12, 0, 104},
        new int[] {37, 0, 106},
        new int[] {45, 0, 108},
        new int[] {48, 0, 109},
        new int[] {56, 0, 110},
        new int[] {63, 0, 111},
        new int[] {73, 0, 112},
      },
      new int[][] {
        new int[] {-1, 1, 126},
      },
      new int[][] {
        new int[] {-1, 3, 107},
        new int[] {9, 0, 78},
        new int[] {10, 0, 79},
        new int[] {11, 0, 103},
        new int[] {12, 0, 104},
        new int[] {14, 0, 150},
        new int[] {37, 0, 106},
        new int[] {45, 0, 108},
        new int[] {48, 0, 109},
        new int[] {56, 0, 110},
        new int[] {63, 0, 111},
        new int[] {73, 0, 112},
      },
      new int[][] {
        new int[] {-1, 1, 127},
      },
      new int[][] {
        new int[] {-1, 1, 129},
      },
      new int[][] {
        new int[] {-1, 1, 128},
      },
      new int[][] {
        new int[] {-1, 1, 125},
      },
      new int[][] {
        new int[] {-1, 1, 124},
      },
      new int[][] {
        new int[] {-1, 1, 108},
      },
      new int[][] {
        new int[] {-1, 1, 130},
      },
      new int[][] {
        new int[] {-1, 3, 115},
        new int[] {74, 0, 152},
      },
      new int[][] {
        new int[] {-1, 1, 9},
        new int[] {17, 0, 10},
        new int[] {18, 0, 11},
        new int[] {21, 0, 12},
        new int[] {22, 0, 13},
        new int[] {23, 0, 14},
        new int[] {24, 0, 15},
        new int[] {25, 0, 16},
        new int[] {26, 0, 17},
        new int[] {27, 0, 18},
        new int[] {30, 0, 19},
        new int[] {31, 0, 20},
        new int[] {32, 0, 21},
        new int[] {35, 0, 23},
        new int[] {36, 0, 24},
        new int[] {38, 0, 25},
        new int[] {41, 0, 26},
        new int[] {43, 0, 27},
        new int[] {46, 0, 28},
        new int[] {49, 0, 29},
        new int[] {50, 0, 30},
        new int[] {52, 0, 31},
        new int[] {53, 0, 32},
        new int[] {54, 0, 33},
        new int[] {55, 0, 34},
        new int[] {62, 0, 36},
        new int[] {64, 0, 37},
        new int[] {68, 0, 38},
        new int[] {69, 0, 39},
        new int[] {70, 0, 40},
      },
      new int[][] {
        new int[] {-1, 1, 11},
        new int[] {17, 0, 10},
        new int[] {18, 0, 11},
        new int[] {21, 0, 12},
        new int[] {22, 0, 13},
        new int[] {23, 0, 14},
        new int[] {24, 0, 15},
        new int[] {25, 0, 16},
        new int[] {26, 0, 17},
        new int[] {27, 0, 18},
        new int[] {30, 0, 19},
        new int[] {31, 0, 20},
        new int[] {32, 0, 21},
        new int[] {35, 0, 23},
        new int[] {36, 0, 24},
        new int[] {38, 0, 25},
        new int[] {41, 0, 26},
        new int[] {43, 0, 27},
        new int[] {46, 0, 28},
        new int[] {49, 0, 29},
        new int[] {50, 0, 30},
        new int[] {52, 0, 31},
        new int[] {53, 0, 32},
        new int[] {54, 0, 33},
        new int[] {55, 0, 34},
        new int[] {62, 0, 36},
        new int[] {64, 0, 37},
        new int[] {68, 0, 38},
        new int[] {69, 0, 39},
        new int[] {70, 0, 40},
      },
      new int[][] {
        new int[] {-1, 1, 12},
        new int[] {17, 0, 10},
        new int[] {18, 0, 11},
        new int[] {21, 0, 12},
        new int[] {22, 0, 13},
        new int[] {23, 0, 14},
        new int[] {24, 0, 15},
        new int[] {25, 0, 16},
        new int[] {26, 0, 17},
        new int[] {27, 0, 18},
        new int[] {30, 0, 19},
        new int[] {31, 0, 20},
        new int[] {32, 0, 21},
        new int[] {35, 0, 23},
        new int[] {36, 0, 24},
        new int[] {38, 0, 25},
        new int[] {41, 0, 26},
        new int[] {43, 0, 27},
        new int[] {46, 0, 28},
        new int[] {49, 0, 29},
        new int[] {50, 0, 30},
        new int[] {52, 0, 31},
        new int[] {53, 0, 32},
        new int[] {54, 0, 33},
        new int[] {55, 0, 34},
        new int[] {62, 0, 36},
        new int[] {64, 0, 37},
        new int[] {68, 0, 38},
        new int[] {69, 0, 39},
        new int[] {70, 0, 40},
      },
      new int[][] {
        new int[] {-1, 1, 18},
      },
      new int[][] {
        new int[] {-1, 1, 57},
      },
      new int[][] {
        new int[] {-1, 1, 58},
      },
      new int[][] {
        new int[] {-1, 3, 122},
        new int[] {19, 0, 154},
        new int[] {74, 0, 155},
      },
      new int[][] {
        new int[] {-1, 1, 149},
      },
      new int[][] {
        new int[] {-1, 3, 124},
        new int[] {40, 0, 157},
        new int[] {42, 0, 158},
        new int[] {74, 0, 155},
      },
      new int[][] {
        new int[] {-1, 1, 151},
      },
      new int[][] {
        new int[] {-1, 1, 39},
        new int[] {16, 0, 120},
        new int[] {29, 0, 121},
        new int[] {39, 0, 122},
      },
      new int[][] {
        new int[] {-1, 1, 40},
        new int[] {39, 0, 122},
      },
      new int[][] {
        new int[] {-1, 1, 64},
        new int[] {61, 0, 129},
      },
      new int[][] {
        new int[] {-1, 1, 71},
        new int[] {20, 0, 164},
      },
      new int[][] {
        new int[] {-1, 1, 65},
      },
      new int[][] {
        new int[] {-1, 1, 78},
      },
      new int[][] {
        new int[] {-1, 1, 2},
      },
      new int[][] {
        new int[] {-1, 1, 114},
      },
      new int[][] {
        new int[] {-1, 1, 116},
      },
      new int[][] {
        new int[] {-1, 3, 135},
        new int[] {9, 0, 78},
        new int[] {10, 0, 79},
        new int[] {11, 0, 103},
        new int[] {12, 0, 104},
        new int[] {37, 0, 106},
        new int[] {45, 0, 108},
        new int[] {48, 0, 109},
        new int[] {56, 0, 110},
        new int[] {63, 0, 111},
        new int[] {73, 0, 112},
      },
      new int[][] {
        new int[] {-1, 1, 112},
        new int[] {1, 0, 166},
        new int[] {9, 0, 78},
        new int[] {10, 0, 79},
        new int[] {11, 0, 103},
        new int[] {12, 0, 104},
        new int[] {37, 0, 106},
        new int[] {45, 0, 108},
        new int[] {48, 0, 109},
        new int[] {56, 0, 110},
        new int[] {63, 0, 111},
        new int[] {73, 0, 112},
      },
      new int[][] {
        new int[] {-1, 1, 117},
        new int[] {65, 0, 168},
      },
      new int[][] {
        new int[] {-1, 1, 31},
      },
      new int[][] {
        new int[] {-1, 3, 139},
        new int[] {74, 0, 169},
      },
      new int[][] {
        new int[] {-1, 1, 32},
      },
      new int[][] {
        new int[] {-1, 1, 104},
      },
      new int[][] {
        new int[] {-1, 3, 142},
        new int[] {28, 0, 170},
        new int[] {66, 0, 171},
      },
      new int[][] {
        new int[] {-1, 3, 143},
        new int[] {51, 0, 172},
        new int[] {74, 0, 173},
      },
      new int[][] {
        new int[] {-1, 1, 43},
        new int[] {28, 0, 174},
      },
      new int[][] {
        new int[] {-1, 1, 52},
      },
      new int[][] {
        new int[] {-1, 3, 146},
        new int[] {8, 0, 175},
      },
      new int[][] {
        new int[] {-1, 1, 62},
        new int[] {1, 0, 82},
        new int[] {2, 0, 83},
        new int[] {3, 0, 84},
        new int[] {4, 0, 85},
        new int[] {5, 0, 86},
        new int[] {6, 0, 87},
        new int[] {7, 0, 88},
        new int[] {10, 0, 89},
        new int[] {12, 0, 90},
        new int[] {13, 0, 91},
        new int[] {74, 0, 93},
      },
      new int[][] {
        new int[] {-1, 1, 134},
      },
      new int[][] {
        new int[] {-1, 1, 110},
      },
      new int[][] {
        new int[] {-1, 3, 150},
        new int[] {9, 0, 78},
        new int[] {10, 0, 79},
        new int[] {11, 0, 103},
        new int[] {12, 0, 104},
        new int[] {37, 0, 106},
        new int[] {45, 0, 108},
        new int[] {48, 0, 109},
        new int[] {56, 0, 110},
        new int[] {63, 0, 111},
        new int[] {73, 0, 112},
      },
      new int[][] {
        new int[] {-1, 1, 109},
      },
      new int[][] {
        new int[] {-1, 1, 105},
        new int[] {65, 0, 177},
      },
      new int[][] {
        new int[] {-1, 1, 13},
        new int[] {17, 0, 10},
        new int[] {18, 0, 11},
        new int[] {21, 0, 12},
        new int[] {22, 0, 13},
        new int[] {23, 0, 14},
        new int[] {24, 0, 15},
        new int[] {25, 0, 16},
        new int[] {26, 0, 17},
        new int[] {27, 0, 18},
        new int[] {30, 0, 19},
        new int[] {31, 0, 20},
        new int[] {32, 0, 21},
        new int[] {35, 0, 23},
        new int[] {36, 0, 24},
        new int[] {38, 0, 25},
        new int[] {41, 0, 26},
        new int[] {43, 0, 27},
        new int[] {46, 0, 28},
        new int[] {49, 0, 29},
        new int[] {50, 0, 30},
        new int[] {52, 0, 31},
        new int[] {53, 0, 32},
        new int[] {54, 0, 33},
        new int[] {55, 0, 34},
        new int[] {62, 0, 36},
        new int[] {64, 0, 37},
        new int[] {68, 0, 38},
        new int[] {69, 0, 39},
        new int[] {70, 0, 40},
      },
      new int[][] {
        new int[] {-1, 3, 154},
        new int[] {74, 0, 155},
      },
      new int[][] {
        new int[] {-1, 1, 153},
      },
      new int[][] {
        new int[] {-1, 1, 59},
        new int[] {74, 0, 180},
      },
      new int[][] {
        new int[] {-1, 3, 157},
        new int[] {74, 0, 155},
      },
      new int[][] {
        new int[] {-1, 3, 158},
        new int[] {40, 0, 182},
        new int[] {74, 0, 155},
      },
      new int[][] {
        new int[] {-1, 1, 53},
        new int[] {74, 0, 180},
      },
      new int[][] {
        new int[] {-1, 1, 150},
      },
      new int[][] {
        new int[] {-1, 1, 41},
        new int[] {39, 0, 122},
      },
      new int[][] {
        new int[] {-1, 1, 152},
      },
      new int[][] {
        new int[] {-1, 1, 66},
      },
      new int[][] {
        new int[] {-1, 1, 72},
      },
      new int[][] {
        new int[] {-1, 1, 118},
      },
      new int[][] {
        new int[] {-1, 3, 166},
        new int[] {9, 0, 78},
        new int[] {10, 0, 79},
        new int[] {11, 0, 103},
        new int[] {12, 0, 104},
        new int[] {37, 0, 106},
        new int[] {45, 0, 108},
        new int[] {48, 0, 109},
        new int[] {56, 0, 110},
        new int[] {63, 0, 111},
        new int[] {73, 0, 112},
      },
      new int[][] {
        new int[] {-1, 1, 119},
        new int[] {65, 0, 185},
      },
      new int[][] {
        new int[] {-1, 3, 168},
        new int[] {9, 0, 78},
        new int[] {10, 0, 79},
        new int[] {11, 0, 103},
        new int[] {12, 0, 104},
        new int[] {37, 0, 106},
        new int[] {45, 0, 108},
        new int[] {48, 0, 109},
        new int[] {56, 0, 110},
        new int[] {63, 0, 111},
        new int[] {73, 0, 112},
      },
      new int[][] {
        new int[] {-1, 1, 33},
      },
      new int[][] {
        new int[] {-1, 3, 170},
        new int[] {51, 0, 187},
        new int[] {74, 0, 188},
      },
      new int[][] {
        new int[] {-1, 3, 171},
        new int[] {28, 0, 189},
      },
      new int[][] {
        new int[] {-1, 3, 172},
        new int[] {74, 0, 190},
      },
      new int[][] {
        new int[] {-1, 1, 44},
      },
      new int[][] {
        new int[] {-1, 3, 174},
        new int[] {51, 0, 191},
        new int[] {74, 0, 192},
      },
      new int[][] {
        new int[] {-1, 1, 146},
      },
      new int[][] {
        new int[] {-1, 1, 111},
      },
      new int[][] {
        new int[] {-1, 3, 177},
        new int[] {74, 0, 193},
      },
      new int[][] {
        new int[] {-1, 1, 106},
      },
      new int[][] {
        new int[] {-1, 1, 60},
        new int[] {74, 0, 180},
      },
      new int[][] {
        new int[] {-1, 1, 154},
      },
      new int[][] {
        new int[] {-1, 1, 55},
        new int[] {74, 0, 180},
      },
      new int[][] {
        new int[] {-1, 3, 182},
        new int[] {74, 0, 155},
      },
      new int[][] {
        new int[] {-1, 1, 54},
        new int[] {74, 0, 180},
      },
      new int[][] {
        new int[] {-1, 1, 120},
        new int[] {65, 0, 195},
      },
      new int[][] {
        new int[] {-1, 3, 185},
        new int[] {9, 0, 78},
        new int[] {10, 0, 79},
        new int[] {11, 0, 103},
        new int[] {12, 0, 104},
        new int[] {37, 0, 106},
        new int[] {45, 0, 108},
        new int[] {48, 0, 109},
        new int[] {56, 0, 110},
        new int[] {63, 0, 111},
        new int[] {73, 0, 112},
      },
      new int[][] {
        new int[] {-1, 1, 121},
      },
      new int[][] {
        new int[] {-1, 3, 187},
        new int[] {74, 0, 197},
      },
      new int[][] {
        new int[] {-1, 1, 45},
      },
      new int[][] {
        new int[] {-1, 3, 189},
        new int[] {51, 0, 198},
        new int[] {74, 0, 199},
      },
      new int[][] {
        new int[] {-1, 1, 48},
      },
      new int[][] {
        new int[] {-1, 3, 191},
        new int[] {74, 0, 200},
      },
      new int[][] {
        new int[] {-1, 1, 46},
      },
      new int[][] {
        new int[] {-1, 1, 107},
      },
      new int[][] {
        new int[] {-1, 1, 56},
        new int[] {74, 0, 180},
      },
      new int[][] {
        new int[] {-1, 3, 195},
        new int[] {9, 0, 78},
        new int[] {10, 0, 79},
        new int[] {11, 0, 103},
        new int[] {12, 0, 104},
        new int[] {37, 0, 106},
        new int[] {45, 0, 108},
        new int[] {48, 0, 109},
        new int[] {56, 0, 110},
        new int[] {63, 0, 111},
        new int[] {73, 0, 112},
      },
      new int[][] {
        new int[] {-1, 1, 122},
      },
      new int[][] {
        new int[] {-1, 1, 49},
      },
      new int[][] {
        new int[] {-1, 3, 198},
        new int[] {74, 0, 202},
      },
      new int[][] {
        new int[] {-1, 1, 47},
      },
      new int[][] {
        new int[] {-1, 1, 50},
      },
      new int[][] {
        new int[] {-1, 1, 123},
      },
      new int[][] {
        new int[] {-1, 1, 51},
      },
    };

    private static int[][][] gotoTable  = {
      new int[][] {
        new int[] {-1, 3},
      },
      new int[][] {
        new int[] {-1, 4},
      },
      new int[][] {
        new int[] {-1, 5},
        new int[] {63, 132},
      },
      new int[][] {
        new int[] {-1, 6},
      },
      new int[][] {
        new int[] {-1, 42},
      },
      new int[][] {
        new int[] {-1, 43},
        new int[] {42, 116},
      },
      new int[][] {
        new int[] {-1, 44},
        new int[] {42, 117},
        new int[] {43, 118},
        new int[] {116, 153},
      },
      new int[][] {
        new int[] {-1, 45},
        new int[] {44, 119},
        new int[] {117, 119},
        new int[] {118, 119},
        new int[] {153, 119},
      },
      new int[][] {
        new int[] {-1, 46},
      },
      new int[][] {
        new int[] {-1, 47},
      },
      new int[][] {
        new int[] {-1, 48},
      },
      new int[][] {
        new int[] {-1, 49},
      },
      new int[][] {
        new int[] {-1, 50},
      },
      new int[][] {
        new int[] {-1, 51},
      },
      new int[][] {
        new int[] {-1, 52},
      },
      new int[][] {
        new int[] {-1, 80},
      },
      new int[][] {
        new int[] {-1, 123},
        new int[] {126, 160},
      },
      new int[][] {
        new int[] {-1, 124},
      },
      new int[][] {
        new int[] {-1, 125},
        new int[] {127, 162},
        new int[] {161, 162},
      },
      new int[][] {
        new int[] {-1, 53},
      },
      new int[][] {
        new int[] {-1, 54},
      },
      new int[][] {
        new int[] {-1, 55},
      },
      new int[][] {
        new int[] {-1, 56},
        new int[] {55, 128},
      },
      new int[][] {
        new int[] {-1, 130},
        new int[] {128, 163},
      },
      new int[][] {
        new int[] {-1, 57},
      },
      new int[][] {
        new int[] {-1, 101},
      },
      new int[][] {
        new int[] {-1, 58},
      },
      new int[][] {
        new int[] {-1, 59},
      },
      new int[][] {
        new int[] {-1, 60},
        new int[] {59, 131},
      },
      new int[][] {
        new int[] {-1, 61},
      },
      new int[][] {
        new int[] {-1, 7},
      },
      new int[][] {
        new int[] {-1, 178},
      },
      new int[][] {
        new int[] {-1, 62},
      },
      new int[][] {
        new int[] {-1, 8},
      },
      new int[][] {
        new int[] {-1, 66},
      },
      new int[][] {
        new int[] {-1, 136},
      },
      new int[][] {
        new int[] {-1, 113},
        new int[] {66, 137},
        new int[] {105, 149},
        new int[] {107, 151},
        new int[] {135, 165},
        new int[] {136, 167},
        new int[] {150, 176},
        new int[] {166, 184},
        new int[] {168, 186},
        new int[] {185, 196},
        new int[] {195, 201},
      },
      new int[][] {
        new int[] {-1, 94},
        new int[] {92, 147},
      },
      new int[][] {
        new int[] {-1, 95},
        new int[] {94, 148},
        new int[] {147, 148},
      },
      new int[][] {
        new int[] {-1, 96},
      },
      new int[][] {
        new int[] {-1, 114},
        new int[] {30, 81},
        new int[] {80, 142},
        new int[] {88, 146},
      },
      new int[][] {
        new int[] {-1, 126},
      },
      new int[][] {
        new int[] {-1, 127},
        new int[] {126, 161},
      },
      new int[][] {
        new int[] {-1, 156},
        new int[] {124, 159},
        new int[] {154, 179},
        new int[] {157, 181},
        new int[] {158, 183},
        new int[] {182, 194},
      },
    };

    private static String[] errorMessages = {
      "expecting: number88, number not88",
      "expecting: data name",
      "expecting: '.', binary, blank, comp, comp1, comp2, comp3, comp4, comp5, date, display, display1, external, filler, function pointer, global, index, justified, leading, national, object, occurs, packed decimal, picture, pointer, procedure pointer, redefines, sign, synchronized, trailing, usage, value, data name",
      "expecting: EOF",
      "expecting: '.'",
      "expecting: value, values",
      "expecting: '.', binary, blank, comp, comp1, comp2, comp3, comp4, comp5, date, display, display1, external, function pointer, global, index, justified, leading, national, native, object, occurs, packed decimal, picture, pointer, procedure pointer, sign, synchronized, trailing, usage, value",
      "expecting: when, zeros",
      "expecting: '.', binary, blank, comp, comp1, comp2, comp3, comp4, comp5, date, display, display1, external, function pointer, global, index, justified, leading, national, object, occurs, packed decimal, picture, pointer, procedure pointer, sign, synchronized, trailing, usage, value",
      "expecting: format",
      "expecting: '.', binary, blank, comp, comp1, comp2, comp3, comp4, comp5, date, display, display1, external, function pointer, global, index, justified, leading, national, object, occurs, packed decimal, picture, pointer, procedure pointer, redefines, sign, synchronized, trailing, usage, value",
      "expecting: '.', binary, blank, comp, comp1, comp2, comp3, comp4, comp5, date, display, display1, external, function pointer, global, index, justified, leading, national, object, occurs, packed decimal, picture, pointer, procedure pointer, right, sign, synchronized, trailing, usage, value",
      "expecting: '.', binary, blank, comp, comp1, comp2, comp3, comp4, comp5, date, display, display1, external, function pointer, global, index, justified, leading, national, object, occurs, packed decimal, picture, pointer, procedure pointer, separate, sign, synchronized, trailing, usage, value",
      "expecting: reference",
      "expecting: ',', '/', '+', '-', '*', '$', '(', number not88, numeric literal, dot zee, is, data name",
      "expecting: is, leading, trailing",
      "expecting: '.', binary, blank, comp, comp1, comp2, comp3, comp4, comp5, date, display, display1, external, function pointer, global, index, justified, leading, left, national, object, occurs, packed decimal, picture, pointer, procedure pointer, right, sign, synchronized, trailing, usage, value",
      "expecting: binary, comp, comp1, comp2, comp3, comp4, comp5, display, display1, function pointer, index, is, national, object, packed decimal, pointer, procedure pointer",
      "expecting: number88, number not88, alphanumeric literal, numeric literal, all, high values, is, low values, nulls, quotes, spaces, zeros",
      "expecting: '.', binary, blank, comp, comp1, comp2, comp3, comp4, comp5, date, display, display1, external, function pointer, global, index, justified, leading, national, object, occurs, packed decimal, picture, pointer, procedure pointer, redefines, renames, sign, synchronized, trailing, usage, value",
      "expecting: '.', ascending, binary, blank, comp, comp1, comp2, comp3, comp4, comp5, date, descending, display, display1, external, function pointer, global, index, indexed, justified, leading, national, object, occurs, packed decimal, picture, pointer, procedure pointer, sign, synchronized, trailing, usage, value",
      "expecting: leading, trailing",
      "expecting: binary, comp, comp1, comp2, comp3, comp4, comp5, display, display1, function pointer, index, national, object, packed decimal, pointer, procedure pointer",
      "expecting: number88, number not88, EOF",
      "expecting: number88, number not88, alphanumeric literal, numeric literal, all, are, high values, low values, nulls, quotes, spaces, zeros",
      "expecting: number88, number not88, alphanumeric literal, numeric literal, all, high values, low values, nulls, quotes, spaces, zeros",
      "expecting: zeros",
      "expecting: is, data name",
      "expecting: '.', binary, blank, comp, comp1, comp2, comp3, comp4, comp5, date, display, display1, external, function pointer, global, index, justified, leading, national, object, occurs, packed decimal, picture, pointer, procedure pointer, sign, synchronized, trailing, usage, value, data name",
      "expecting: '.', ',', ')', number88, number not88, alphanumeric literal, numeric literal, ascending, binary, blank, comp, comp1, comp2, comp3, comp4, comp5, date, depending, descending, display, display1, external, function pointer, global, high values, index, indexed, justified, leading, low values, national, nulls, object, occurs, packed decimal, picture, pointer, procedure pointer, quotes, sign, spaces, synchronized, through, times, to, trailing, usage, value, zeros",
      "expecting: '.', ascending, binary, blank, comp, comp1, comp2, comp3, comp4, comp5, date, depending, descending, display, display1, external, function pointer, global, index, indexed, justified, leading, national, object, occurs, packed decimal, picture, pointer, procedure pointer, sign, synchronized, times, to, trailing, usage, value",
      "expecting: '.', ',', '/', '+', '-', '*', '$', '(', number not88, numeric literal, dot zee, binary, blank, comp, comp1, comp2, comp3, comp4, comp5, date, display, display1, external, function pointer, global, index, justified, leading, national, object, occurs, packed decimal, picture, pointer, procedure pointer, sign, synchronized, trailing, usage, value, data name",
      "expecting: ',', '/', '+', '-', '*', '$', '(', number not88, numeric literal, dot zee, data name",
      "expecting: '.', ',', number88, number not88, alphanumeric literal, numeric literal, binary, blank, comp, comp1, comp2, comp3, comp4, comp5, date, display, display1, external, function pointer, global, high values, index, justified, leading, low values, national, nulls, object, occurs, packed decimal, picture, pointer, procedure pointer, quotes, sign, spaces, synchronized, through, trailing, usage, value, zeros",
      "expecting: number88, number not88, alphanumeric literal, numeric literal, high values, low values, nulls, quotes, spaces, zeros",
      "expecting: is, key, data name",
      "expecting: by, data name",
      "expecting: '.', binary, blank, comp, comp1, comp2, comp3, comp4, comp5, date, display, display1, external, function pointer, global, index, indexed, justified, leading, national, object, occurs, packed decimal, picture, pointer, procedure pointer, sign, synchronized, trailing, usage, value",
      "expecting: '.', binary, blank, character, comp, comp1, comp2, comp3, comp4, comp5, date, display, display1, external, function pointer, global, index, justified, leading, national, object, occurs, packed decimal, picture, pointer, procedure pointer, sign, synchronized, trailing, usage, value",
      "expecting: '.', ',', number88, number not88, alphanumeric literal, numeric literal, high values, low values, nulls, quotes, spaces, zeros",
      "expecting: '.', ',', number88, number not88, alphanumeric literal, numeric literal, high values, low values, nulls, quotes, spaces, through, zeros",
      "expecting: depending, times",
      "expecting: on, data name",
      "expecting: '.', ascending, binary, blank, comp, comp1, comp2, comp3, comp4, comp5, date, depending, descending, display, display1, external, function pointer, global, index, indexed, justified, leading, national, object, occurs, packed decimal, picture, pointer, procedure pointer, sign, synchronized, trailing, usage, value",
      "expecting: ')'",
      "expecting: '.', through",
      "expecting: '.', ascending, binary, blank, comp, comp1, comp2, comp3, comp4, comp5, date, descending, display, display1, external, function pointer, global, index, indexed, justified, leading, national, object, occurs, packed decimal, picture, pointer, procedure pointer, sign, synchronized, trailing, usage, value, data name",
      "expecting: '.', binary, blank, comp, comp1, comp2, comp3, comp4, comp5, date, display, display1, external, function pointer, global, index, indexed, justified, leading, national, object, occurs, packed decimal, picture, pointer, procedure pointer, sign, synchronized, trailing, usage, value, data name",
      "expecting: depending",
    };

    private static int[] errors = {
      0, 1, 2, 3, 4, 4, 4, 4, 4, 5, 6, 7, 8, 6, 6, 8, 
      6, 8, 9, 6, 6, 8, 10, 8, 8, 8, 11, 12, 8, 13, 0, 8, 
      14, 8, 8, 1, 15, 16, 12, 17, 18, 19, 10, 8, 8, 8, 8, 8, 
      8, 8, 8, 8, 20, 8, 8, 21, 12, 8, 8, 22, 8, 8, 8, 23, 
      18, 24, 25, 8, 26, 8, 8, 8, 8, 27, 8, 8, 8, 28, 29, 29, 
      0, 30, 31, 31, 31, 31, 31, 31, 0, 31, 31, 31, 32, 31, 31, 31, 
      31, 8, 21, 8, 8, 8, 22, 33, 33, 34, 33, 25, 33, 33, 33, 33, 
      33, 8, 33, 1, 8, 8, 8, 8, 35, 35, 36, 20, 35, 37, 20, 37, 
      12, 38, 8, 8, 4, 25, 25, 34, 39, 40, 8, 1, 8, 8, 41, 42, 
      43, 0, 44, 31, 31, 8, 34, 8, 45, 8, 1, 46, 47, 1, 27, 46, 
      20, 37, 37, 8, 8, 39, 34, 40, 34, 8, 42, 48, 1, 20, 42, 31, 
      8, 1, 4, 47, 46, 46, 1, 46, 40, 34, 39, 1, 20, 42, 20, 1, 
      20, 4, 46, 34, 39, 20, 1, 20, 20, 39, 20, 
    };
}
}
